
namespace = prim_orig

# add random weirdness to primitives
event = {
	id = prim_orig.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = using_mod_more_prim_orig
		every_country = {
			limit = {
				is_country_type = primitive
			}
			# syncretic proles
			random_list = {
				90 = { }
				# syncretic species
				10 = {
					modifier = { 
						factor = 0
						NOT = { host_has_dlc = Utopia }
					}
					create_species = {
						name = random
						class = random_non_machine
						portrait = random
						homeworld = capital_scope
						traits = {
							trait = trait_syncretic_proles
							trait = random_traits
						}
					}
					capital_scope = {
						while = {
							limit = {
								pop_percentage = {
									percentage < 0.4
									limit = {
										NOT = { is_same_species = owner }
									}
								}	
							}
							random_owned_pop = {
								limit = {
									is_same_species = owner
								}
								kill_pop = yes
							}
							create_pop = {
								species = last_created_species
								ethos = random
							}
						}	
					}
				}
			}
			# abandoned gateway
			IF = {
				limit = { 
					NOT = {
						capital_scope.solar_system = {
							any_neighbor_system = {
								OR = {
									has_megastructure = gateway_ruined
									has_megastructure = lgate_base
								}
							}
	
						}
					}
					any_megastructure = {
						is_megastructure_type = gateway_ruined
						solar_system = {
							NOT = { exists = starbase }
						}
					}
				}
				get_galaxy_setup_value = {
					setting = num_gateways
					which = gateway_chance
				}
				random_list = {
					15 = {
						modifier = {
							factor = gateway_chance
							always = yes
						}
						save_event_target_as = doorstep_primitives
						capital_scope = {
							solar_system = {
								spawn_megastructure = {
									type = "gateway_ruined"
									random_pos = yes
									orbit_angle = 360
									init_effect = {
										set_megastructure_flag = doorstep_gateway@event_target:doorstep_primitives
										save_event_target_as = doorstep_gateway
									}
								}
							}
						}
						random_megastructure = {
							limit = {
								is_megastructure_type = gateway_ruined
								solar_system = {
									NOT = { exists = starbase }
								}	
							}
							delete_megastructure = this
						}
						set_country_flag = encountered_first_gateway
					}
					1000 = { }
				}
			}
			
			# next generation
			IF = {
				limit = {
					has_extra_origins_mod = yes
				}
				random_list = {
					90 = { }
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_MAM
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_REP
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_AVI
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_ART
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_MOL
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_FUN
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						modifier = {
							factor = 0
							OR = {
								AND = {
									not_using_mod_rapid_evolution = yes
									not_using_mod_premium_presapient_portraits = yes
								}
								NOT = { host_has_dlc = "Humanoids Species Pack" }
							}
						}
						capital_scope = {
							create_species = {
								name = random
								class = PRE_HUM
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						modifier = {
							factor = 0
							OR = {
								AND = {
									not_using_mod_rapid_evolution = yes
									not_using_mod_premium_presapient_portraits = yes
								}
								NOT = { host_has_dlc = "Plantoids Species Pack" }
							}
						}
						capital_scope = {
							create_species = {
								name = random
								class = PRE_PLANT
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						modifier = {
							factor = 0
							OR = {
								AND = {
									not_using_mod_rapid_evolution = yes
									not_using_mod_premium_presapient_portraits = yes
								}
								has_lithoids = no
							}
						}
						capital_scope = {
							create_species = {
								name = random
								class = PRE_LITHOID
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
				}
			}
			# calamitous birth
			IF = {
				limit = {
					is_lithoid_empire = yes
					NOT = {
						has_origin = origin_scion
					}
				}
				random_list = {
					50 = { }
					50 = {
						capital_scope = {
							add_deposit = d_lithoid_crater
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_modifier = { modifier = lithoid_crater days = -1 }	
						}
						set_origin = origin_lithoid
					}
				}
			}
			# mechanist
			random_list = {
				80 = { }
				20 = {
					primitive_ethic_shift_effect = { ethic = materialist }
					country_event = { id = prim_orig.10 days = 1 }
					modifier = {
						factor = 0
						OR = {
							has_origin = origin_scion
							has_dtraits_trait = { trait = trait_naturally_spiritualist }
						}
					}
					modifier = {
						factor = 1.3
						has_trait = trait_natural_engineers
					}
					modifier = {
						factor = 0.3
						has_country_flag = machine_age
					}
					modifier = {
						factor = 0.6
						OR = {
							has_country_flag = atomic_age
							has_country_flag = tomb_world_primitives
						}
					}
				}
			}
			IF = {
				limit = {
					has_extra_origins_mod = yes
				}
				# biomedical renaissance
				random_list = {
					95 = { }
					4 = {
						country_event = { id = prim_orig_integration.10 days = 1 }
						modifier = {
							factor = 0.3
							has_country_flag = machine_age
						}
						modifier = {
							factor = 0.6
							OR = {
								has_country_flag = atomic_age
								has_country_flag = tomb_world_primitives
							}
						}
					}
				}
			}
			# necrophage
			random_list = {
				95 = { }
				5 = {
					country_event = { id = prim_orig.50 days = 1 }
					modifier = {
						factor = 0
						has_country_flag = stone_age
					}
					modifier = {
						factor = 0.2
						has_country_flag = bronze_age
					}
					modifier = {
						factor = 0.3
						has_country_flag = iron_age
					}
					modifier = {
						factor = 0.4
						has_country_flag = late_medieval_age
					}
					modifier = {
						factor = 0.5
						has_country_flag = renaissance_age
					}
					modifier = {
						factor = 0.6
						has_country_flag = steam_age
					}
					modifier = {
						factor = 0.7
						has_country_flag = industrial_age
					}
					modifier = {
						factor = 0.8
						has_country_flag = machine_age
					}
					modifier = {
						factor = 0.9
						has_country_flag = atomic_age
					}
				}
			}
			IF = {
				limit = {
					has_extra_origins_mod = yes
				}
				# immortal messiah
				random_list = {
					95 = { }
					5 = {
						modifier = {
							factor = 0
							NOR = {
								has_authority = auth_dictatorial
								has_authority = auth_imperial
							}
						}
						shift_ethic = ethic_spiritualist
						switch = {
							trigger = has_country_flag
							early_space_age = {
								ruler = {
									set_age = 2100
									set_skill = 5
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							atomic_age = {
								ruler = {
									set_age = 1940
									set_skill = 5			
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							vbp_tomb_primitives = {
								ruler = {
									set_age = 80
									set_skill = 5
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							machine_age = {
								ruler = {
									set_age = 1780
									set_skill = 5			
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							industrial_age = {
								ruler = {
									set_age = 1620
									set_skill = 5			
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							steam_age = {
								ruler = {
									set_age = 1400
									set_skill = 5			
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							renaissance_age = {
								ruler = {
									set_age = 1180
									set_skill = 5			
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							late_medieval_age = {
								ruler = {
									set_age = 960
									set_skill = 5			
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							iron_age = {
								ruler = {
									set_age = 740
									set_skill = 5			
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							bronze_age = {
								ruler = {
									set_age = 520
									set_skill = 5			
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
							stone_age = {
								ruler = {
									set_age = 300
									set_skill = 5
									add_trait = leader_trait_ruler_chosen
									set_leader_flag = immortal_messiah
								}
							}
						}
						modifier = {
							factor = 0.1
							has_country_flag = stone_age
						}
						modifier = {
							factor = 0.2
							has_country_flag = bronze_age
						}
						modifier = {
							factor = 0.3
							has_country_flag = iron_age
						}
						modifier = {
							factor = 0.4
							has_country_flag = late_medieval_age
						}
						modifier = {
							factor = 0.5
							has_country_flag = renaissance_age
						}
						modifier = {
							factor = 0.6
							has_country_flag = steam_age
						}
						modifier = {
							factor = 0.7
							has_country_flag = industrial_age
						}
						modifier = {
							factor = 0.8
							has_country_flag = machine_age
						}
						modifier = {
							factor = 0.9
							has_country_flag = atomic_age
						}
						modifier = {
							factor = 0.05
							has_country_flag = vbp_tomb_primitives
						}
					}
				}
				# starship graveyard
				random_list = {
					95 = { }
					5 = {
						capital_scope = {
							add_deposit = d_irreparable_wreckage
							while = {
								count = 5
								add_deposit = d_starship_graveyard
							}	
						}
					}
				}
			}
			# federation
			IF = {
				limit = { is_xenophile = yes }
				country_event = { id = prim_orig.60 days = 1 }
			}
			
			# track age of Earth
			IF = {
				limit = {
					species_portrait = "human"
					capital_scope.solar_system = {
						has_star_flag = primitive_sol
					}
				}
				country_event = {
					id = prim_orig.200
				}
			}
		}
		every_country = {
			limit = {
				is_country_type = vbp_hive
			}
			IF = {
				limit = {
					has_extra_origins_mod = yes
				}
				# biomedical renaissance
				random_list = {
					97 = { }
					3 = {
						country_event = { id = prim_orig_integration.10 days = 1 }
						modifier = {
							factor = 0.3
							has_country_flag = machine_age
						}
						modifier = {
							factor = 0.6
							OR = {
								has_country_flag = atomic_age
								has_country_flag = tomb_world_primitives
							}
						}
					}
				}
				# next generation
				random_list = {
					90 = { }
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_MAM
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_REP
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_AVI
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_ART
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_MOL
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						capital_scope = {
							create_species = {
								name = random
								class = PRE_FUN
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						modifier = {
							factor = 0
							OR = {
								not_using_mod_rapid_evolution = yes
								NOT = { host_has_dlc = "Humanoids Species Pack" }
							}
						}
						capital_scope = {
							create_species = {
								name = random
								class = PRE_HUM
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						modifier = {
							factor = 0
							OR = {
								not_using_mod_rapid_evolution = yes
								NOT = { host_has_dlc = "Plantoids Species Pack" }
							}
						}
						capital_scope = {
							create_species = {
								name = random
								class = PRE_PLANT
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
					1 = {
						modifier = {
							factor = 0
							OR = {
								not_using_mod_rapid_evolution = yes
								has_lithoids = no
							}
						}
						capital_scope = {
							create_species = {
								name = random
								class = PRE_LITHOID
								portrait = random
								homeworld = this
								traits = random
								sapient = no
							}
							while = {
								count = 4
								create_pop = {
									species = last_created_species
									ethos = random
								}
							}	
						}
					}
				}
				# starship graveyard
				random_list = {
					95 = { }
					5 = {
						capital_scope = {
							add_deposit = d_irreparable_wreckage
							while = {
								count = 5
								add_deposit = d_starship_graveyard
							}	
						}
					}
				}
			}
			# various incompatible
			random_list = {
				12 = { }
				4 = {
					IF = {
						limit = {
							has_country_flag = vbp_hive_superego_stage
							has_extra_origins_mod = yes
						}
						country_event = {
							id = prim_orig_integration.20
							days = 1
						}
					}
				}
				8 = {
					IF = {
						limit = {
							OR = {
								has_country_flag = vbp_hive_superego_stage
								has_country_flag = vbp_hive_ego_stage
							}
							has_extra_origins_mod = yes
						}
						country_event = {
							id = prim_orig_integration.20
							days = 1
						}
					}
				}
				6 = {
					IF = {
						limit = {
							has_extra_origins_mod = yes
						}
						country_event = {
							id = prim_orig_integration.20
							days = 1
						}
					}
				}
				20 = {
					IF = {
						limit = {
							is_lithoid_empire = yes
							NOT = { has_origin = origin_scion }
						}
						capital_scope = {
							add_deposit = d_lithoid_crater
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_deposit = d_buried_lithoids
							add_modifier = { modifier = lithoid_crater days = -1 }	
						}
						set_origin = origin_lithoid
					}
				}
				50 = {
					IF = {
						limit = {
							host_has_dlc = "Utopia"
							NOT = { has_origin = origin_scion }
						}
						set_origin = origin_tree_of_life
						capital_scope = {
							add_deposit = d_tree_of_life_home
						}
					}
				}
			}
			# federation
			IF = {
				limit = { is_xenophile = yes }
				country_event = { id = prim_orig.60 days = 1 }
			}
		}
		every_country = {
			limit = { is_country_type = vbp_machine }
			# federation
			IF = {
				limit = { is_xenophile = yes }
				country_event = { id = prim_orig.60 days = 1 }
			}
		}	
	}
}

#########################
#Natural  outcome  block#
#########################

#Change origin before natural ftl discovery
country_event = {
	id = prim_orig.5
	hide_window = yes

	trigger = {
		OR = {
			is_country_type = primitive
			is_country_type = vbp_hive
			is_country_type = vbp_machine
		}
		OR = {
			has_country_flag = early_space_age
			has_country_flag = vbp_hive_superego_stage
			has_country_flag = vbp_primitive_robots
			has_country_flag = mpo_stranded_colonists_2
		}
		NOR = {
			has_country_flag = recently_advanced
			AND = {
				exists = home_planet
				home_planet = {
					has_observation_outpost = yes
					observation_outpost = {
						OR = {
							has_mission = covert_infiltration
							has_mission = vbp_hive_subdue
							has_mission = vbp_hive_break_apart_0
							has_mission = vbp_hive_break_apart_1
							has_mission = vbp_machine_repurpose
							owner = { is_fallen_empire = yes }
						}
					}
				}
			}
		}
		years_passed > 25
	}

	mean_time_to_happen = {
		years = 100
	}

	immediate = {
		IF = {
			limit = {
				NOR = {
					has_origin = origin_lithoid
					has_origin = origin_necrophage
					has_origin = origin_tree_of_life
					has_origin = origin_lost_colony
					AND = {
						exists = home_planet
						home_planet = {
							has_observation_outpost = yes
							observation_outpost = {
								OR = {
									has_mission = technological_enlightenment_0
									has_mission = technological_enlightenment_1
									has_mission = technological_enlightenment_2
									has_mission = technological_enlightenment_3
									has_mission = technological_enlightenment_4
									has_mission = technological_enlightenment_5
									has_mission = technological_enlightenment_6
									has_mission = technological_enlightenment_7
									has_mission = technological_enlightenment_8
									has_mission = technological_enlightenment_9
									has_mission = vbp_hive_enlightenment_0
									has_mission = vbp_hive_enlightenment_1
									has_mission = vbp_hive_enlightenment_2
									has_mission = vbp_machine_framework_upgrade
									has_mission = covert_infiltration
								}
							}
						}
					}
				}
			}
			IF = {
				limit = {
					any_owned_species = {
						is_robotic = yes
					}
				}
				set_origin = origin_mechanists
			}
			ELSE_IF = {
				limit = {
					any_owned_species = {
						has_trait = trait_syncretic_proles
					}
				}
				set_origin = origin_syncretic_evolution
			}
			ELSE_IF = {
				limit = {
					has_extra_origins_mod = yes
					any_owned_pop = {
						is_sapient = no
					}
				}
				set_origin = origin_next_generation
				add_research_option = tech_epigenetic_triggers
			}
			ELSE_IF = {
				limit = {
					has_trait = trait_survivor
				}
				set_origin = origin_post_apocalyptic
			}
			ELSE_IF = {
				limit = {
					has_extra_origins_mod = yes
					has_trait = trait_pc_nuked_preference
				}
				set_origin = origin_irradiated_evolution
			}
			ELSE_IF = {
				limit = {
					capital_scope = {
						is_planet_class = pc_ringworld_habitable
					}
				}
				set_origin = origin_shattered_ring
			}
			ELSE_IF = {
				limit = {
					capital_scope = {
						is_planet_class = pc_relic
					}
				}
				set_origin = origin_remnants
			}
			ELSE_IF = {
				limit = {
					has_extra_origins_mod = yes
					has_authority = auth_hive_mind
					capital_scope = {
						is_planet_class = pc_hive
					}
				}
				set_origin = origin_genius_loci
			}
			ELSE_IF = {
				limit = {
					has_country_flag = mpo_primitive_contact_sender
					has_country_flag = mpo_common_ground_advance
				}
				set_origin = origin_common_ground_npc
			}
			ELSE_IF = {
				limit = {
					has_country_flag = mpo_primitive_contact_sender
					has_country_flag = mpo_hegemon_advance
				}
				set_origin = origin_hegemon_npc
			}
			ELSE_IF = {
				limit = {
					has_country_flag = mpo_primitive_contact_sender
				}
				set_origin = origin_common_ground
			}
			ELSE_IF = {
				limit = {
					capital_scope = {
						is_planet_class = pc_gaia
					}
				}
				set_origin = origin_life_seeded
			}
			ELSE_IF = {
				limit = {
					has_extra_origins_mod = yes
					any_owned_leader = {
						has_leader_flag = immortal_messiah
					}
				}
				set_origin = origin_immortal_messiah
			}
			ELSE_IF = {
				limit = {
					has_dtraits_trait = { trait = trait_dimorphic_1 }
				}
				set_origin = origin_dimorphic
			}
			ELSE_IF = {
				limit = {
					OR = {
						has_dtraits_trait = { trait = trait_dimorphic_male }
						has_dtraits_trait = { trait = trait_dimorphic_female }
					}
				}
				set_origin = origin_dimorphic_sexual
			}
			ELSE_IF = {
				limit = {
					OR = {
						has_dtraits_trait = { trait = trait_younger_form }
						has_dtraits_trait = { trait = trait_older_form }
					}
				}
				set_origin = origin_instars
			}
			ELSE_IF = {
				limit = {
					has_extra_origins_mod = yes
					capital_scope = {
						has_deposit = d_starship_graveyard
					}
				}
				set_origin = origin_starship_graveyard
			}
			ELSE_IF = {
				limit = {
					has_extra_origins_mod = yes
					capital_scope.solar_system = {
						OR = {
							has_megastructure = mega_art_installation_1
							has_megastructure = mega_art_installation_2
							has_megastructure = mega_art_installation_3
							has_megastructure = mega_art_installation_4
							has_megastructure = mega_art_installation_permanently_ruined
							has_megastructure = mega_art_installation_ruined
							has_megastructure = mega_art_installation_restored
							has_megastructure = mega_art_installation_restored_2
							has_megastructure = strategic_coordination_center_1
							has_megastructure = strategic_coordination_center_2
							has_megastructure = strategic_coordination_center_3
							has_megastructure = strategic_coordination_center_permanently_ruined
							has_megastructure = strategic_coordination_center_ruined
							has_megastructure = strategic_coordination_center_restored
							has_megastructure = think_tank_1
							has_megastructure = think_tank_2
							has_megastructure = think_tank_3
							has_megastructure = think_tank_4
							has_megastructure = think_tank_permanently_ruined
							has_megastructure = think_tank_ruined
							has_megastructure = think_tank_restored
							has_megastructure = spy_orb_1
							has_megastructure = spy_orb_2
							has_megastructure = spy_orb_3
							has_megastructure = spy_orb_4
							has_megastructure = spy_orb_permanently_ruined
							has_megastructure = spy_orb_ruined
							has_megastructure = spy_orb_restored
							has_megastructure = interstellar_assembly_1
							has_megastructure = interstellar_assembly_2
							has_megastructure = interstellar_assembly_3
							has_megastructure = interstellar_assembly_4
							has_megastructure = interstellar_assembly_permanently_ruined
							has_megastructure = interstellar_assembly_ruined
							has_megastructure = interstellar_assembly_restored
							has_megastructure = mega_shipyard_1
							has_megastructure = mega_shipyard_2
							has_megastructure = mega_shipyard_3
							has_megastructure = mega_shipyard_permanently_ruined
							has_megastructure = mega_shipyard_ruined
							has_megastructure = mega_shipyard_restored
						}
					}
				}
				set_origin = origin_cosmic_monument
			}
			ELSE_IF = {
				limit = {
					capital_scope.solar_system = {
						OR = {
							has_megastructure = gateway_0
							has_megastructure = gateway_final
							has_megastructure = gateway_ruined
							has_megastructure = gateway_restored
							has_megastructure = lgate_base
						}
					}
				}
				set_origin = origin_galactic_doorstep
			}
			ELSE_IF = {
				limit = {
					has_extra_origins_mod = yes
					capital_scope.solar_system = {
						any_neighbor_system = {
							OR = {
								has_megastructure = dyson_sphere_1
								has_megastructure = dyson_sphere_2
								has_megastructure = dyson_sphere_3
								has_megastructure = dyson_sphere_4
								has_megastructure = dyson_sphere_5
								has_megastructure = dyson_sphere_permanently_ruined
								has_megastructure = dyson_sphere_ruined
								has_megastructure = dyson_sphere_restored
								has_megastructure = matter_decompressor_1
								has_megastructure = matter_decompressor_2
								has_megastructure = matter_decompressor_3
								has_megastructure = matter_decompressor_4
								has_megastructure = matter_decompressor_permanently_ruined
								has_megastructure = matter_decompressor_ruined
								has_megastructure = matter_decompressor_restored
							}								
						}
					}
				}
				set_origin = origin_cosmic_monument
			}
			ELSE_IF = {
				limit = {
					has_country_flag = benefactor_empire
				}
				set_origin = origin_shoulders_of_giants
			}
			ELSE_IF = {
				limit = {
					has_more_default_origins = yes
					has_valid_civic = civic_machine_assimilator
				}
				set_origin = origin_cybernetic_assimilation
				add_research_option = tech_planetary_unification
				capital_scope = {
					add_district = district_nexus
					add_district = district_generator
					create_pop = { species = owner }
					create_pop = { species = owner }
					create_pop = { species = owner }
					create_pop = { species = owner }
					add_modifier = { modifier = assimilation_protocol_modifier days = -1 }
				}
			}
			ELSE_IF = {
				limit = {
					has_more_default_origins = yes
					has_valid_civic = civic_machine_servitor
				}
				set_origin = origin_synthetic_caretakers
				add_research_option = tech_planetary_unification
				capital_scope = {
					add_district = district_nexus
					add_district = district_generator
					create_pop = { species = owner }
					create_pop = { species = owner }
					create_pop = { species = owner }
					create_pop = { species = owner }
					add_modifier = { modifier = caretaker_protocol_modifier days = -1 }
				}
			}
			ELSE_IF = {
				limit = {
					has_extra_origins_mod = yes
					has_authority = auth_machine_intelligence
					any_owned_species = {
						is_robotic = no
					}
				}
				set_origin = origin_ai_uprising
			}
			ELSE_IF = {
				limit = {
					has_more_default_origins = yes
					has_authority = auth_machine_intelligence
				}
				random_list = {
					25 = {
						modifier = {
							factor = 0
							has_modifier = vbp_machine_angered
						}
						set_origin = origin_former_terminator
						add_research_option = tech_planetary_unification
						capital_scope = {
							add_district = district_nexus
							add_district = district_generator
							create_pop = { species = owner }
							create_pop = { species = owner }
							create_pop = { species = owner }
							create_pop = { species = owner }
							add_modifier = { modifier = unification_protocol_modifier days = -1 }
						}		
					}
					75 = {
						set_origin = origin_self_defence_protocol
						add_research_option = tech_planetary_unification
						capital_scope = {
							add_district = district_nexus
							add_district = district_generator
							create_pop = { species = owner }
							create_pop = { species = owner }
							create_pop = { species = owner }
							create_pop = { species = owner }
							add_modifier = { modifier = unification_protocol_modifier days = -1 }
						}		
					}
				}
			}
			ELSE_IF = {
				limit = {
					has_extra_origins_mod = yes
					capital_scope = {
						has_modifier = titanic_life
					}
				}
				set_origin = origin_monster_tamers
			}
			ELSE_IF = {
				limit = {
					has_more_default_origins = yes
					has_authority = auth_hive_mind
				}
				set_origin = origin_hive_mind_default
				add_research_option = tech_planetary_unification
				capital_scope = {
					add_district = district_hive
					add_district = district_generator
					create_pop = { species = owner }
					create_pop = { species = owner }
					create_pop = { species = owner }
					create_pop = { species = owner }
					add_modifier = { modifier = origin_hive_mind_default_modifier days = -1 }
				}
			}
			ELSE_IF = {
				limit = {
					has_more_default_origins = yes
				}
				random_list = {
					15 = {
						modifier = {
							factor = 0
							OR = {
								is_militarist = no
								is_gestalt = yes
							}
						}
						modifier = {
							factor = 2
							has_ethic = ethic_fanatic_militarist
						}
						set_origin = origin_military_unification
						add_modifier = {
							modifier = military_experience_modifier
							days = -1
						}
						capital_scope = { 
							add_modifier = { modifier = military_unification_modifier days = -1 } 
							#add_deposit = d_former_battlefield
						}
						give_technology = {
							tech = tech_centralized_command
							message = no
						}
						give_technology = {
							tech = tech_planetary_unification
							message = no
						}
					}
					15 = {
						modifier = {
							factor = 0
							OR = {
								is_authoritarian = no
								is_gestalt = yes
							}
						}
						modifier = {
							factor = 2
							has_ethic = ethic_fanatic_authoritarian
						}
						set_origin = origin_planetary_hegemony
						add_modifier = {
							modifier = homeworld_hegemon_modifier
							days = -1
						}
						give_technology = {
							tech = tech_planetary_unification
							message = no
						}
					}
					15 = {
						modifier = {
							factor = 0
							OR = {
								is_xenophobe = no
								is_egalitarian = yes
								is_pacifist = yes
								is_gestalt = yes
							}
						}
						modifier = {
							factor = 2
							has_ethic = ethic_fanatic_xenophobe
						}
						set_origin = origin_xenophobe
						add_modifier = {
							modifier = origin_xenophobe_modifier
							days = -1
						}
						give_technology = {
							tech = tech_planetary_unification
							message = no
						}
					}
					15 = {
						modifier = {
							factor = 0
							OR = {
								is_spiritualist = no
								is_gestalt = yes
							}
						}
						modifier = {
							factor = 2
							has_ethic = ethic_fanatic_spiritualist
						}
						set_origin = origin_world_religion
						add_modifier = {
							modifier = holy_journey_modifier
							days = -1
						}
						capital_scope = { 
							add_modifier = { modifier = world_religion_modifier days = -1 } 
						}
						give_technology = {
							tech = tech_holographic_rituals
							message = no
						}
					}
					15 = {
						modifier = {
							factor = 0
							OR = {
								is_materialist = no
								is_gestalt = yes
							}
						}
						modifier = {
							factor = 2
							has_ethic = ethic_fanatic_materialist
						}
						set_origin = origin_final_frontier
						add_research_option = tech_planetary_unification
						add_modifier = {
							modifier = to_boldly_go_modifier
							days = -1
						}
						give_technology = {
							tech = tech_physics_1
							message = no
						}
						give_technology = {
							tech = tech_sensors_2
							message = no
						}
					}
					5 = {
						modifier = {
							factor = 0
							OR = {
								is_xenophobe = yes
								is_gestalt = yes
							}
						}
						set_origin = origin_common_good
						add_research_option = tech_planetary_unification
						add_modifier = {
							modifier = origin_common_good_modifier
							days = -1
						}
					}
					5 = {
						modifier = {
							factor = 0
							OR = {
								is_xenophobe = yes
								is_gestalt = yes
							}
						}
						set_origin = origin_default
						add_research_option = tech_planetary_unification
						capital_scope = {
							add_district = district_city
							add_district = district_city
							create_pop = { species = owner }
							create_pop = { species = owner }
							create_pop = { species = owner }
							create_pop = { species = owner }
							add_modifier = { modifier = prosp_uni_mod days = -1 }								
						}
					}
				}
			}
			ELSE = {
				set_origin = origin_default
				add_research_option = tech_planetary_unification
				capital_scope = {
					add_modifier = { modifier = prosp_uni_mod days = -1 }
				}
			}
		}
		set_timed_country_flag = {
			flag = entered_space_naturally
			days = 30
		}
		switch = {
			trigger = is_country_type
			primitive = {
				country_event = { id = primitive.16 }
			}
			vbp_hive = {
				country_event = { id = vbp_hive.220 }
			}
			vbp_machine = {
				country_event = { id = vbp_machine.200 }
			}
		}
	}
}
#Likelihood booster for aquired tech
country_event = {
	id = prim_orig.6
	hide_window = yes

	trigger = {
		OR = {
			is_country_type = primitive
			is_country_type = vbp_hive
			is_country_type = vbp_machine
		}
		OR = {
			has_country_flag = early_space_age
			has_country_flag = vbp_hive_superego_stage
			has_country_flag = vbp_primitive_robots
		}
		OR = {
			has_country_flag = acquired_tech
			has_country_flag = vbp_machine_angered
		}
		years_passed > 25
	}

	mean_time_to_happen = {
		years = 170
	}

	immediate = {
		country_event = { id = prim_orig.5 }
	}
}
#Extra likelihood for intelligent
country_event = {
	id = prim_orig.7
	
	hide_window = yes
	
	trigger = {
		is_primitive = yes
		NOT = { has_country_flag = recently_advanced }
		any_owned_species = {
			OR = {
				has_trait = trait_intelligent
				has_trait = trait_robot_logic_engines
			}
			can_be_researcher = yes
		}
	}
	
	mean_time_to_happen = {
		years = 500
	}
	
	immediate = {
		random_list = {
			75 = {
				switch = {
					trigger = has_country_flag
					stone_age = {
						country_event = { id = primitive.30 }
					}
					bronze_age = {
						country_event = { id = primitive.20 }
					}
					iron_age = {
						country_event = { id = primitive.22 }
					}
					late_medieval_age = {
						country_event = { id = primitive.24 }
					}
					renaissance_age = {
						country_event = { id = primitive.26 }
					}
					steam_age = {
						country_event = { id = primitive.28 }
					}
					industrial_age = {
						country_event = { id = primitive.10 }
					}
					machine_age = {
						country_event = { id = primitive.12 }
					}
					atomic_age = {
						country_event = { id = primitive.14 }
					}
					early_space_age = {
						country_event = { id = prim_orig.5 }
					}
					vbp_hive_superego_stage = {
						country_event = { id = prim_orig.5 }
					}
					vbp_primitive_robots = {
						country_event = { id = prim_orig.5 }
					}
				}
			}
			25 = {
				switch = {
					trigger = has_country_flag
					steam_age = {
						country_event = { id = primitive.28 }
					}
					industrial_age = {
						country_event = { id = primitive.10 }
					}
					machine_age = {
						country_event = { id = primitive.12 }
					}
					atomic_age = {
						country_event = { id = primitive.14 }
					}
					early_space_age = {
						country_event = { id = prim_orig.5 }
					}
					vbp_hive_ego_stage = {
						country_event = { id = vbp_hive.210 }
					}
					vbp_hive_superego_stage = {
						country_event = { id = prim_orig.5 }
					}
					vbp_primitive_robots = {
						country_event = { id = prim_orig.5 }
					}
				}
			}
			100 = {
				modifier = {
					factor = 0
					has_diagraphers_trait_mod = yes
				}
			}
		}
	}
}


#Robots
country_event = {
	id = prim_orig.10
	
	hide_window = yes
	
	trigger = {
		is_country_type = primitive
		OR = {
			has_country_flag = machine_age
			has_country_flag = atomic_age
			has_country_flag = early_space_age
		}
		is_materialist = yes
		OR = {
			host_has_dlc = "Utopia"
			host_has_dlc = "Synthetic Dawn Story Pack"
		}
		NOT = {
			capital_scope = {
				has_observation_outpost = yes
				observation_outpost = { has_scion_mission = yes }	
			}
		}
	}
	
	mean_time_to_happen = {
		years = 400
	}
	
	immediate = {
		give_technology = { message = no tech = tech_powered_exoskeletons }
		give_technology = { message = no tech = tech_robotic_workers }
		create_built_robot_species = yes
		capital_scope = {
			while = {
				count = 4
				create_pop = {
					species = last_created_species
				}
			}	
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = prim_orig.11 }
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.11
	title = evt_primitive_mechanists
	picture = GFX_evt_robot_assembly_plant
	location = from.capital_scope
	show_sound = event_default
	is_triggered_only = yes
	desc = {
		text = evt_primitive_mechanists_desc
		trigger = {
			is_spiritualist = no
		}
	}
	desc = {
		text = evt_primitive_mechanists_desc_spiritualist
		trigger = {
			is_spiritualist = yes
		}
	}
		
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = evt_primitive_mechanists.spiritualists
	}
	option = {
		name = INTERESTING
	}
}
#Extra likelihood for natural engineers
country_event = {
	id = prim_orig.12
	
	hide_window = yes
	
	trigger = {
		is_country_type = primitive
		is_materialist = yes
		OR = {
			has_country_flag = machine_age
			has_country_flag = atomic_age
			has_country_flag = early_space_age
		}
		any_owned_species = {
			has_trait = trait_natural_engineers
		}
	}
	
	mean_time_to_happen = {
		years = 1300
	}
	
	immediate = {
		random_list = {
			50 = {
				country_event = { id = prim_orig.10 }
			}
			50 = {
				modifier = {
					factor = 0
					has_diagraphers_trait_mod = yes
				}
			}
		}
	}
}
#Extra likelihood for intelligent
country_event = {
	id = prim_orig.13
	
	hide_window = yes
	
	trigger = {
		is_country_type = primitive
		is_materialist = yes
		OR = {
			has_country_flag = machine_age
			has_country_flag = atomic_age
			has_country_flag = early_space_age
		}
		any_owned_species = {
			has_trait = trait_intelligent
		}
	}
	
	mean_time_to_happen = {
		years = 2000
	}
	
	immediate = {
		random_list = {
			50 = {
				country_event = { id = prim_orig.10 }
			}
			50 = {
				modifier = {
					factor = 0
					has_diagraphers_trait_mod = yes
				}
			}
		}
	}
}

#Machine_takeover
country_event = {
	id = prim_orig.20
	
	hide_window = yes
	
	trigger = {
		is_country_type = primitive
		has_country_flag = early_space_age
		has_technology = tech_robotic_workers
		host_has_dlc = "Synthetic Dawn Story Pack"
	}
	
	mean_time_to_happen = {
		years = 200
	}
	
	immediate = {
		every_owned_pop = {
			limit = {
				is_robot_pop = yes
			}
			kill_pop = yes
		}
		capital_scope = {
			save_event_target_as = machine_takeover_planet
			create_species = {
				name = random
				class = MACHINE
				portrait = random
				homeworld = this
				traits = {
					trait = trait_machine_unit
				}
				traits = random
			}
			random_list = {
				# regular machine empire
				60 = {
					every_owned_pop = {
						kill_pop = yes
					}
					change_pc = pc_nuked
					set_planet_flag = primitives_nuked_themselves
					vbp_create_machine_country = yes
					last_created_country = { vbp_randomize_machine_flag = yes }
					vbp_setup_machine_world = yes
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.21 }
						}
					}		
				}
				15 = {
					IF = {
						limit = { has_extra_origins_mod = no }
						every_owned_pop = {
							kill_pop = yes
						}
					}
					ELSE = {
						while = {
							limit = { num_pops > 6 }
							random_owned_pop = {
								kill_pop = yes
							}
						}	
					}
					vbp_create_machine_country = yes
					last_created_country = {
						set_country_flag = vbp_primitive_robots
						set_primitive_age = vbp_primitive_robots
						vbp_randomize_machine_flag = yes
					}
					vbp_setup_machine_world = yes
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.22 }
						}
					}
				}
				# servitors
				12.5 = {
					while = {
						limit = { num_pops > 5 }
						random_owned_pop = {
							kill_pop = yes
						}
					}
					mpo_create_machine_servitor_country = yes
					last_created_country = {
						set_country_flag = vbp_primitive_robots
						set_primitive_age = vbp_primitive_robots
						vbp_randomize_machine_flag = yes
					}
					owner.species = {
						set_species_flag = secondary_species@last_created_country
					}
					vbp_setup_machine_world = yes
					add_building = building_mpo_machine_farms
					add_building = building_mpo_machine_factories
					add_building = building_organic_sanctuary
					IF = {
						limit = {
							has_deposit = d_decrepit_dwellings
						}
						remove_deposit = d_decrepit_dwellings
					}
					ELSE = {
						random_owned_pop = {
							limit = {
								is_robot_pop = no
							}
							kill_pop = yes
						}	
					}
					while = {
						limit = { num_pops > 7 }
						random_owned_pop = {
							kill_pop = yes
						}
					}
					add_deposit = d_unsupervised_settlement
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.23 }
						}
					}
				}
				# assimilators
				12.5 = {
					while = {
						limit = { num_pops > 10 }
						random_owned_pop = {
							kill_pop = yes
						}
					}
					mpo_create_machine_assimilator_country = yes
					last_created_country = {
						set_country_flag = vbp_primitive_robots
						set_primitive_age = vbp_primitive_robots
						vbp_randomize_machine_flag = yes
					}
					random_owned_pop = {
						create_cybernetic_species_mod = yes
					}
					last_created_species = {
						set_species_flag = secondary_species@last_created_country
					}
					vbp_setup_machine_world = yes
					while = {
						limit = { num_pops > 24 }
						random_owned_pop = {
							limit = {
								is_same_species = owner
							}
							kill_pop = yes
						}
					}
					IF = {
						limit = {
							has_deposit = d_decrepit_dwellings
						}
						remove_deposit = d_decrepit_dwellings
					}
					ELSE = {
						random_owned_pop = {
							limit = {
								is_robot_pop = no
							}
							kill_pop = yes
						}	
					}
					add_deposit = d_assimilators_ruins
					add_building = building_mpo_machine_farms
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.24 }
						}
					}
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.21
	title = evt_primitive_machine_nuking
	picture = GFX_evt_nuclear_explosion
	location = event_target:machine_takeover_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_machine_nuking_desc
		
	option = {
		name = UNFORTUNATE
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = evt_primitive_machine_nuking.spiritualists
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = evt_primitive_machine_nuking.spiritualists
	}
}
#Player is notified
country_event = {
	id = prim_orig.22
	title = evt_primitive_machine_takover
	picture = GFX_evt_organic_oppression
	location = event_target:machine_takeover_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_machine_takover_desc
		
	option = {
		name = UNFORTUNATE
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = evt_primitive_machine_nuking.spiritualists
	}
}
#Player is notified
country_event = {
	id = prim_orig.23
	title = evt_primitive_machine_service
	picture = GFX_evt_metropolis
	location = event_target:machine_takeover_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_machine_service_desc
		
	option = {
		name = INTERESTING
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = UNFORTUNATE
	}
	option = {
		exclusive_trigger = {
			has_valid_civic = civic_machine_servitor
		}
		name = EXCELLENT
	}
}
#Player is notified
country_event = {
	id = prim_orig.24
	title = evt_primitive_machine_assimilation
	picture = GFX_evt_organic_oppression
	location = event_target:machine_takeover_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_machine_assimilation_desc
		
	option = {
		name = WORRYING
	}
	option = {
		exclusive_trigger = {
			is_gestalt = yes
		}
		name = INTERESTING
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = TERRIBLE
	}
}

# Nuclear War (Survivors)
country_event = {
	id = prim_orig.30
	title = primitive.131.name
	desc = primitive.132.desc
	picture = GFX_evt_nuclear_explosion
	location = FROM

	is_triggered_only = yes

	immediate = {
		FROM = {
			change_pc = pc_nuked
			reroll_planet = yes
			owner = {
				random_list = {
					2 = {
						create_survivor_species_mod = yes
					}
					1 = {
						create_survivor_necroids = yes
						modifier = {
							factor = 0
							has_necroids = no
						}
					}
				}
				change_species = last_created_species
				set_graphical_culture = industrial_01
				if = {
					limit = { has_country_flag = atomic_age }
					remove_country_flag = atomic_age
				}
				if = {
					limit = { has_country_flag = industrial_age }
					remove_country_flag = industrial_age
				}
				set_country_flag = vbp_tomb_primitives
				set_primitive_age = vbp_tomb_primitives
				set_timed_country_flag = { flag = recently_advanced days = 7200 }
				change_government = {
					civics = {
						civic = civic_vbp_tomb_1
						civic = civic_vbp_tomb_2	
					}
				}
			}
			while = {
				limit = {
					count_owned_pop = {
						count > 15
					}
				}
				random_owned_pop = {
					kill_pop = yes
				}
			}
			while = {
				limit = {
					any_owned_species = {
						is_robotic = no
						NOT = { has_trait = trait_survivor }
					}
				}
				random_owned_pop = {
					limit = {
						is_robot_pop = no
						NOT = { has_trait = trait_survivor }
					}
					create_survivor_species_mod = yes
				}
			}
			remove_all_buildings = yes
			add_building = building_vbp_wasteland_towns
            add_building = building_vbp_vaults
            add_building = building_vbp_government_bunkers
			add_building = building_vbp_raiding_villages
			owner = {
				random_list = {
					5 = { }
					5 = {
						country_event = {
							id = prim_orig.150
							days = 3600
							random = 3600
						}
					}
				}	
			}
		}
	}

	option = {
		name = primitive.132.a
	}
}

# necrophage takes over on primitive world
country_event = {
	id = prim_orig.50
	hide_window = yes
	mean_time_to_happen = { years = 34800 }

	trigger = {
		is_country_type = primitive
		NOT = { has_country_flag = stone_age }
		NOT = { has_origin = origin_scion }
		has_necroids = yes
		NOT = {
			capital_scope = {
				has_observation_outpost = yes
				observation_outpost = { has_scion_mission = yes }	
			}
		}
	}

	immediate = {
		capital_scope = {
			save_event_target_as = necrophage_planet
		}
		random_list = {
			95 = {
				create_necrophage_species = yes
				switch = {
					trigger = has_country_flag
					bronze_age = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_landed_nobility
									civic = civic_flat_world_theory
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"green"
										"dark_green"
										"null"
										"null"
									}	
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_primitive_age = bronze_age
								set_country_flag = bronze_age
							}
						}
					}
					iron_age = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_landed_nobility
									civic = civic_flat_world_theory
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"purple"
										"dark_purple"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = preindustrial_01
								set_primitive_age = iron_age
								set_country_flag = iron_age
							}								
						}
					}
					late_medieval_age = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_landed_nobility
									civic = civic_flat_world_theory
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"light_blue"
										"blue"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = preindustrial_01
								set_primitive_age = late_medieval_age
								set_country_flag = late_medieval_age
							}	
						}
					}
					renaissance_age = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_landed_nobility
									civic = civic_flat_world_theory
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"pink"
										"burgundy"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = preindustrial_01
								set_primitive_age = renaissance_age
								set_country_flag = renaissance_age
							}	
						}
					}
					steam_age = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_landed_nobility
									civic = civic_flat_world_theory
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"orange"
										"red"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = preindustrial_01
								set_primitive_age = steam_age
								set_country_flag = steam_age
							}	
						}
					}
					industrial_age = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_increasing_urbanization
									civic = civic_atmospheric_pollution
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"beige"
										"yellow"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = industrial_01
								set_primitive_age = industrial_age
								set_country_flag = industrial_age
							}	
						}
					}
					machine_age = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_increasing_urbanization
									civic = civic_atmospheric_pollution
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"yellow"
										"orange"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = industrial_01
								set_primitive_age = machine_age
								set_country_flag = machine_age
							}	
						}
					}
					atomic_age = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_increasing_urbanization
									civic = civic_atmospheric_pollution
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"beige"
										"brown"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = industrial_01
								set_primitive_age = atomic_age
								set_country_flag = atomic_age
							}	
						}
					}
					early_space_age = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_increasing_urbanization
									civic = civic_atmospheric_pollution
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"grey"
										"dark_grey"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = industrial_01
								set_primitive_age = early_space_age
								set_country_flag = early_space_age
							}	
						}
					}
					mpo_stranded_colonists_2 = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_increasing_urbanization
									civic = civic_atmospheric_pollution
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"grey"
										"dark_grey"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = industrial_01
								set_primitive_age = early_space_age
								set_country_flag = early_space_age
							}
							while = {
								count = 2
								random_owned_pop = {
									limit = { is_same_species = owner }
									kill_pop = yes
								}
							}
						}
					}
					vbp_tomb_primitives = {
						capital_scope = {
							create_country = {
								type = primitive
								species = last_created_species
								ethos = random
								origin = origin_necrophage
								ignore_initial_colony_error = yes
								civics = {
									civic = civic_vbp_tomb_1
									civic = civic_vbp_tomb_2
								}
								flag = {
									icon = {
										category = "special"
										file = "primitive.dds"
									}
									background= {
										category = "backgrounds"
										file = "new_dawn.dds"
									}
									colors={
										"grey"
										"dark_grey"
										"null"
										"null"
									}
								}
							}
							set_owner = last_created_country
							set_capital = yes
							last_created_country = {
								set_graphical_culture = industrial_01
								set_primitive_age = vbp_tomb_primitives
								set_country_flag = vbp_tomb_primitives
							}	
						}
					}
				}
				last_created_country = {
					save_event_target_as = necrophage_country
					IF = {
						limit = { has_global_flag = dtraits_randomization_flag }
						weight_ethos_by_traits = yes
						weight_authority_by_traits = yes
						post_ethos_weighting_cleanup = yes
						adjust_traits_for_ethics = yes
						set_global_flag = need_to_do_something_besides_scripted_effects
					}
				}
				capital_scope = {
					save_event_target_as = necrophage_planet
					while = {
						limit = {
							pop_percentage = {
								percentage < 0.2
								limit = {
									is_same_species = owner
								}
							}	
						}
						random_owned_pop = {
							limit = {
								NOT = { is_same_species = owner }
							}
							kill_pop = yes
						}
						create_pop = {
							species = owner
							ethos = owner
						}
					}
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.51 }
						}
					}
				}						
			}
			5 = {
				create_hive_necrophage_species = yes
				IF = {
					limit = {
						OR = {
							has_country_flag = bronze_age
							has_country_flag = iron_age
							has_country_flag = late_medieval_age
							has_country_flag = renaissance_age
						}
					}
					create_country = {
						name = random
						type = vbp_hive
						ethos = {
							ethic = ethic_gestalt_consciousness
						}
						species = last_created_species
						authority = auth_hive_mind
						civics = {
							civic = vbp_hive_civic_ego_one
							civic = vbp_hive_civic_ego_two
						}
						origin = origin_necrophage
						flag = {
							icon = {
								category = "zoological"
								file = "flag_zoological_20.dds"
							}
							background = {
								category = "backgrounds"
								file = "triangle_split.dds"
							}
							colors = {
								"teal"
								"blue"
								"null"
								"null"
							}
						}
						effect = {
							set_country_flag = day_0
							set_country_flag = vbp_hive_ego_stage
							set_primitive_age = vbp_hive_ego_stage
						}
					}			
				}
				ELSE = {
					create_country = {
						name = random
						type = vbp_hive
						ethos = {
							ethic = ethic_gestalt_consciousness
						}
						species = last_created_species
						authority = auth_hive_mind
						civics = {
							civic = vbp_hive_civic_superego_one
							civic = vbp_hive_civic_superego_two
						}
						origin = origin_necrophage
						flag = {
							icon = {
								category = "zoological"
								file = "flag_zoological_20.dds"
							}
							background = {
								category = "backgrounds"
								file = "triangle_split.dds"
							}
							colors = {
								"grey"
								"brown"
								"null"
								"null"
							}
						}
						effect = {
							set_country_flag = day_0
							set_country_flag = vbp_hive_ego_stage
							set_primitive_age = vbp_hive_ego_stage
						}
					}
				}
				IF = {
					limit = {
						OR = {
							has_country_flag = bronze_age
							has_country_flag = iron_age
							has_country_flag = late_medieval_age
							has_country_flag = renaissance_age
						}
					}
					create_country = {
						name = random
						type = vbp_hive
						ethos = {
							ethic = ethic_gestalt_consciousness
						}
						species = last_created_species
						authority = auth_hive_mind
						civics = {
							civic = vbp_hive_civic_ego_one
							civic = vbp_hive_civic_ego_two
						}
						origin = origin_necrophage
						flag = {
							icon = {
								category = "zoological"
								file = "flag_zoological_20.dds"
							}
							background = {
								category = "backgrounds"
								file = "triangle_split.dds"
							}
							colors = {
								"teal"
								"blue"
								"null"
								"null"
							}
						}
						effect = {
							set_country_flag = day_0
							set_country_flag = vbp_hive_superego_stage
							set_primitive_age = vbp_hive_superego_stage
						}
					}			
				}
				last_created_country = { save_event_target_as = necrophage_country }
				capital_scope = {
					set_owner = last_created_country
					set_capital = yes
					save_event_target_as = necrophage_planet
	
					remove_all_primitive_buildings = yes
					add_building = building_vbp_hive_pool
					add_building = building_vbp_warren
					add_building = building_vbp_mine
					add_building = building_vbp_farm
					IF = {
						limit = {
							owner = { has_country_flag = vbp_hive_superego_stage }
						}
						add_building = building_vbp_power_plant
						add_building = building_vbp_factory
					}
					
					while = {
						limit = {
							pop_percentage = {
								percentage < 0.2
								limit = {
									is_same_species = owner
								}
							}	
						}
						random_owned_pop = {
							limit = {
								NOT = { is_same_species = owner }
							}
							kill_pop = yes
						}
						create_pop = {
							species = owner
							ethos = owner
						}
					}
					IF = {
						limit = { has_observation_outpost = yes }
						observation_outpost_owner = {
							country_event = { id = prim_orig.52 }
						}
					}
				}	
			}
		}
	}
}
# player is notified
country_event = {
	id = prim_orig.51
	title = evt_necrophage_takeover
	picture = GFX_evt_ship_in_orbit
	location = event_target:necrophage_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_necrophage_takeover_desc

	option = {
		trigger = { NOT = { has_origin = origin_necrophage } }
		name = WORRYING
	}
	option = {
		trigger = { has_origin = origin_necrophage }
		name = INTERESTING
	}
}
# player is notified
country_event = {
	id = prim_orig.52
	title = evt_necrophage_takeover
	picture = GFX_evt_ship_in_orbit
	location = event_target:necrophage_planet
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_necrophage_takeover.hive_desc

	option = {
		trigger = { NOT = { has_origin = origin_necrophage } }
		name = WORRYING
	}
	option = {
		trigger = { has_origin = origin_necrophage }
		name = INTERESTING
	}
}

# necrophage takes over after invasion
country_event = {
	id = prim_orig.55
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = primitive
		has_necroids = yes
	}

	immediate = {
		random_list = {
			95 = { }
			5 = {
				species = { save_event_target_as = prepatent_species }
				fromfrom = {
					save_event_target_as = necrophage_planet
					planet_event = {
						id = prim_orig.56
						days = 120
						random = 250
					}
				}
				modifier = {
					factor = 0.9
					has_country_flag = bronze_age
				}
				modifier = {
					factor = 0.8
					has_country_flag = iron_age
				}
				modifier = {
					factor = 0.7
					has_country_flag = late_medieval_age
				}
				modifier = {
					factor = 0.6
					has_country_flag = renaissance_age
				}
				modifier = {
					factor = 0.5
					has_country_flag = steam_age
				}
				modifier = {
					factor = 0.4
					has_country_flag = industrial_age
				}
				modifier = {
					factor = 0.3
					has_country_flag = machine_age
				}
				modifier = {
					factor = 0.2
				}
				modifier = {
					factor = 0.1
					OR = {
						has_country_flag = early_space_age
						has_country_flag = tomb_world_primitives
					}
				}
			}
		}
	}
}
planet_event = {
	id = prim_orig.56
	title = evt_necrophage_takeover_post_invasion
	picture = GFX_evt_ship_in_orbit
	location = root
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_necrophage_takeover_post_invasion_desc
	immediate = {
		owner = {
			save_event_target_as = primitive_invader
		}
		random_list = {
			95 = {
				event_target:prepatent_species = {
					create_necrophage_species = yes
				}
				create_country = {
					name = random
					name_list = random
					species = last_created_species
					type = default
					origin = "origin_necrophage"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					ethos = random
					authority = random
					civics = random
				}
				last_created_country = {
					IF = {
						limit = { has_global_flag = dtraits_randomization_flag }
						weight_ethos_by_traits = yes
						weight_authority_by_traits = yes
						post_ethos_weighting_cleanup = yes
						adjust_traits_for_ethics = yes
						set_global_flag = need_to_do_something_besides_scripted_effects
					}
				}
			}
			5 = {
				event_target:prepatent_species = {
					create_hive_necrophage_species = yes
				}
				create_country = {
					name = random
					name_list = random
					species = last_created_species
					type = default
					origin = "origin_necrophage"
					ignore_initial_colony_error = yes
					day_zero_contact = no
					ethos = { ethic = ethic_gestalt_consciousness }
					authority = auth_hive_mind
					civics = random
				}				
			}
		}
		set_owner = last_created_country
		set_capital = yes
		while = {
			limit = {
				pop_percentage = {
					percentage < 0.2
					limit = {
						is_same_species = owner
					}
				}	
			}
			random_owned_pop = {
				limit = {
					NOT = { is_same_species = owner }
				}
				kill_pop = yes
			}
			create_pop = {
				species = owner
				ethos = owner
			}
		}
		solar_system = {
			starbase = {
				set_owner = last_created_country
			}
		}
	}
	option = {
		solar_system = {
			add_claims = {
				who = event_target:primitive_invader
				num_of_claims = 2 show_notification = yes
			}
		}
		name = TERRIBLE
	}
}

# xenophile primitives with neighbors will try to contact them
country_event = {
	id = prim_orig.60
	
	hide_window = yes
	
	trigger = {
		OR = {
			is_country_type = primitive
			is_country_type = vbp_hive
			is_country_type = vbp_machine
		}
		OR = {
			has_country_flag = machine_age
			has_country_flag = atomic_age
			has_country_flag = early_space_age
			has_country_flag = vbp_hive_superego_stage
			has_country_flag = vbp_primitive_robots
		}
		NOT = {
			has_country_flag = mpo_no_contacts
		}
		capital_scope = {
			is_inside_nebula = no
		}
		host_has_dlc = Federations
	}
	
	mean_time_to_happen = {
		years = 3
	}
	
	immediate = {
		capital_scope.solar_system = {
			every_system_planet = {
				limit = {
					exists = owner
					owner = {
						NOT = {
							is_same_value = root
						}
						OR = {
							is_country_type = primitive
							is_country_type = vbp_hive
							is_country_type = vbp_machine
						}
						OR = {
							has_country_flag = industrial_age
							has_country_flag = machine_age
							has_country_flag = atomic_age
							has_country_flag = early_space_age
							has_country_flag = vbp_hive_ego_stage
							has_country_flag = vbp_hive_superego_stage
							has_country_flag = vbp_primitive_robots
							has_country_flag = vbp_tomb_primitives
						}
					}	
				}
				owner = {
					IF = {
						limit = {
							NOR = {
								has_country_flag = industrial_age
								has_country_flag = vbp_hive_ego_stage
								has_country_flag = vbp_tomb_primitives
							}
							is_xenophobe = no
							OR = {
								is_xenophile = yes
								AND = {
									is_authoritarian = yes
									ROOT = { is_authoritarian = yes }
								}
								AND = {
									is_egalitarian = yes
									ROOT = { is_egalitarian = yes }
								}
								AND = {
									is_militarist = yes
									ROOT = { is_militarist = yes }
								}
								AND = {
									is_pacifist = yes
									ROOT = { is_pacifist = yes }
								}
								AND = {
									is_spiritualist = yes
									ROOT = { is_spiritualist = yes }
								}
								AND = {
									is_materialist = yes
									ROOT = { is_materialist = yes }
								}
							}
						}
						primitive_seti_effect = {
							delay = 1
							receiver = root
						}
						root = {
							primitive_seti_effect = {
								delay = 1
								receiver = prev
							}	
						}
					}
				}
				root = {
					set_timed_country_flag = {
						flag = keep_looking
						days = 2
					}
				}
			}
			every_neighbor_system = {
				limit = {
					is_inside_nebula = no
				}
				every_system_planet = {
					limit = {
						exists = owner
						owner = {
							NOT = {
								is_same_value = root
							}
							OR = {
								is_country_type = primitive
								is_country_type = vbp_hive
								is_country_type = vbp_machine
							}
							OR = {
								has_country_flag = industrial_age
								has_country_flag = machine_age
								has_country_flag = atomic_age
								has_country_flag = early_space_age
								has_country_flag = vbp_hive_ego_stage
								has_country_flag = vbp_hive_superego_stage
								has_country_flag = vbp_primitive_robots
								has_country_flag = vbp_tomb_primitives
							}
						}	
					}
					owner = {
						IF = {
							limit = {
								NOR = {
									has_country_flag = industrial_age
									has_country_flag = vbp_hive_ego_stage
									has_country_flag = vbp_tomb_primitives
								}
								is_xenophobe = no
								OR = {
									is_xenophile = yes
									AND = {
										is_authoritarian = yes
										ROOT = { is_authoritarian = yes }
									}
									AND = {
										is_egalitarian = yes
										ROOT = { is_egalitarian = yes }
									}
									AND = {
										is_militarist = yes
										ROOT = { is_militarist = yes }
									}
									AND = {
										is_pacifist = yes
										ROOT = { is_pacifist = yes }
									}
									AND = {
										is_spiritualist = yes
										ROOT = { is_spiritualist = yes }
									}
									AND = {
										is_materialist = yes
										ROOT = { is_materialist = yes }
									}
								}
							}
							IF = {
								limit = { years_passed < 1 }
								primitive_seti_effect = {
									delay = 1
									receiver = root
								}
								root = {
									primitive_seti_effect = {
										delay = 1
										receiver = prev
									}	
								}
							}
							ELSE_IF = {
								limit = {
									has_country_flag = mpo_primitive_contact@root
									NOR = {
										has_country_flag = mpo_delay_contact@root
										has_country_flag = recently_advanced
									}
								}
								primitive_seti_effect = {
									delay = 1800
									receiver = root
								}
								root = {
									primitive_seti_effect = {
										delay = 1800
										receiver = prev
									}	
								}
							}
							ELSE = {
								primitive_seti_effect = {
									delay = 1800
									receiver = root
								}
								root = {
									primitive_seti_effect = {
										delay = 3600
										receiver = prev
									}	
								}
							}
						}
					}
					root = {
						set_timed_country_flag = {
							flag = keep_looking
							days = 2
						}
					}
				}	
			}
		}
		IF = {
			limit = {
				NOT = {
					has_country_flag = keep_looking
				}
			}
			set_timed_country_flag = {
				flag = mpo_no_contacts
				days = 21600
			}
		}
	}
}
country_event = {
	id = prim_orig.61
	is_triggered_only = yes
	
	hide_window = yes
	
	trigger = {
		OR = {
			is_country_type = primitive
			is_country_type = vbp_hive
			is_country_type = vbp_machine
		}
		has_country_flag = machine_age
	}

	immediate = {
		set_primitive_age_effect = { primitive_age = atomic_age }
		capital_scope = {
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = prim_orig.63 }
				}
			}
		}
	}
}
country_event = {
	id = prim_orig.62
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_country_type = primitive
			is_country_type = vbp_hive
			is_country_type = vbp_machine
		}
		OR = {
			has_country_flag = machine_age
			has_country_flag = atomic_age
		}
	}

	immediate = {
		set_primitive_age_effect = { primitive_age = early_space_age }
		capital_scope = {
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = prim_orig.64 }
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.63
	title = evt_primitive_seti_atomic_age
	picture = GFX_evt_metropolis
	location = from.capital_scope
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_seti_atomic_age_desc
		
	option = {
		name = primitive.13.a
	}
}
#Player is notified
country_event = {
	id = prim_orig.64
	title = evt_primitive_seti_early_space_age
	picture = GFX_evt_satellite_in_orbit
	location = from.capital_scope
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_primitive_seti_early_space_age_desc
		
	option = {
		name = primitive.19.a
	}
}

# scion enters space
country_event = {
	id = prim_orig.70
	title = "observation.2000.name"
	desc = "observation.2000.desc"
	picture = GFX_evt_metropolis
	show_sound = event_laboratory_sound
	location = FROMFROM
	
	is_triggered_only = yes
	
	immediate = {
		save_event_target_as = scion_master
		FROMFROM = {
			observation_outpost_owner = {
				# Xenoist Faction Enlightenment Demand
				set_timed_country_flag = {
					flag = recent_enlightenment_timed
					days = 7200 # 20 years
				}
			}
			observation_outpost = {
				dismantle = yes
			}			
			owner = { save_event_target_as = primitive_country }
			solar_system = {
				if = {
					limit = {
						starbase = { owner = { is_same_value = root } }
					}
					starbase = {
						set_owner = event_target:primitive_country
					}						
				}
				every_system_planet = {
					limit = {
						exists = owner
						owner = { is_same_value = root }
					}
					set_owner = event_target:primitive_country			
				}
			}			
			event_target:primitive_country = {
				country_event = { id = primitive.16 }
				establish_communications_no_message = root
				add_opinion_modifier = {
					who = root
					modifier = opinion_scion
				}
				set_subject_of = {
					who = root
					subject_type = scion
				}						
				country_event = { id = origin.10 days = 3 }
			}
			root = {
				add_opinion_modifier = {
					who = event_target:primitive_country
					modifier = opinion_scion
				}
				country_event = { id = origin.20 days = 9000 random = 9000 }
			}
		}
	}
	
	option = {
		name = "observation.2000.a"
	}
}



#########################
#Random ethics shifts	#
#########################

# Random ethics shift from advancement
country_event = {
	id = prim_orig.140
	
	hide_window = yes
	
	trigger = {
		is_country_type = primitive
		has_country_flag = recently_advanced
		NOR = {
			has_country_flag = stone_age
			has_country_flag = vbp_tomb_primitives
		}
	}
	
	mean_time_to_happen = {
		years = 180
	}
	
	immediate = {
		random_list = {
			10 = {
				primitive_ethic_shift_effect = { ethic = authoritarian notification_event = prim_orig.141 }
				modifier = {
					factor = 2.9
					has_country_flag = bronze_age
				}
				modifier = {
					factor = 0.1
					has_country_flag = renaissance_age
				}
				modifier = {
					factor = 1.25
					any_owned_species = {
						OR = {
							has_trait = trait_conformists
							has_dtraits_trait = { trait = trait_complacent }
						}
					}
				}
				modifier = {
					factor = 0.75
					count_owned_species = {
						count = all
						limit = {
							OR = {
								has_trait = trait_deviants
								has_dtraits_trait = { trait = trait_political }
							}	
						}
					}
				}
				modifier = {
					factor = 0
					capital_scope = {
						has_observation_outpost = yes
						observation_outpost = {
							has_scion_mission = yes
							owner = { is_egalitarian = yes }
						}
					}
				}
			}
			10 = {
				primitive_ethic_shift_effect = { ethic = egalitarian notification_event = prim_orig.142 }
				modifier = {
					factor = 2.4
					has_country_flag = renaissance_age
				}
				modifier = {
					factor = 1.5
					has_country_flag = industrial_age
				}
				modifier = {
					factor = 0.1
					has_country_flag = bronze_age
				}
				modifier = {
					factor = 1.25
					count_owned_species = {
						count = all
						limit = {
							OR = {
								has_trait = trait_deviants
								has_dtraits_trait = { trait = trait_political }
							}	
						}
					}
				}
				modifier = {
					factor = 0.75
					any_owned_species = {
						OR = {
							has_trait = trait_conformists
							has_dtraits_trait = { trait = trait_complacent }
						}
					}
				}
				modifier = {
					factor = 0
					capital_scope = {
						has_observation_outpost = yes
						observation_outpost = {
							has_scion_mission = yes
							owner = { is_authoritarian = yes }
						}
					}
				}
			}
			11 = {
				primitive_ethic_shift_effect = { ethic = xenophobe notification_event = prim_orig.143 }
				modifier = {
					factor = 1.25
					any_owned_species = {
						not = { is_same_species = root }
						has_trait = trait_repugnant
					}
				}
				modifier = {
					factor = 0.75
					any_owned_species = {
						not = { is_same_species = root }
						has_trait = trait_charismatic
					}
				}
				modifier = {
					factor = 1.6
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_naturally_xenophobic }
					}
				}
				modifier = {
					factor = 0
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_naturally_xenophilic }
					}
				}
				modifier = {
					factor = 0
					capital_scope = {
						has_observation_outpost = yes
						observation_outpost = {
							has_scion_mission = yes
						}
					}
				}
			}
			10 = {
				primitive_ethic_shift_effect = { ethic = xenophile notification_event = prim_orig.144 }
				modifier = {
					factor = 1.25
					any_owned_species = {
						not = { is_same_species = root }
						has_trait = trait_charismatic
					}
				}
				modifier = {
					factor = 1.6
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_naturally_xenophilic }
					}
				}
				modifier = {
					factor = 0
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_naturally_xenophobic }
					}
				}
				modifier = {
					factor = 0.75
					any_owned_species = {
						not = { is_same_species = root }
						has_trait = trait_repugnant
					}
				}
			}
			11.5 = {
				primitive_ethic_shift_effect = { ethic = militarist notification_event = prim_orig.145 }
				modifier = {
					factor = 1.25
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_aggressive }
					}
				}
				modifier = {
					factor = 0.75
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_timid }
					}
				}
				modifier = {
					factor = 0
					capital_scope = {
						has_observation_outpost = yes
						observation_outpost = {
							has_scion_mission = yes
							owner = { is_pacifist = yes }
						}
					}
				}
			}
			10 = {
				primitive_ethic_shift_effect = { ethic = pacifist notification_event = prim_orig.146 }
				modifier = {
					factor = 1.25
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_timid }
					}
				}
				modifier = {
					factor = 0.75
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_aggressive }
					}
				}
				modifier = {
					factor = 0
					capital_scope = {
						has_observation_outpost = yes
						observation_outpost = {
							has_scion_mission = yes
							owner = { is_militarist = yes }
						}
					}
				}
			}
			10 = {
				primitive_ethic_shift_effect = { ethic = materialist notification_event = prim_orig.147 }
				modifier = {
					factor = 1.5
					OR = {
						has_country_flag = renaissance_age
						has_country_flag = steam_age
						has_country_flag = industrial_age
						has_country_flag = machine_age
						has_country_flag = atomic_age
						has_country_flag = early_space_age
					}
				}
				modifier = {
					factor = 1.25
					any_owned_species = {
						is_same_species = root
						OR = {
							has_trait = trait_natural_physicists
							has_trait = trait_natural_engineers
							has_trait = trait_natural_sociologists
						}
					}
				}
				modifier = {
					factor = 0.75
					any_owned_species = {
						is_same_species = root
						has_trait = trait_traditional
					}
				}
				modifier = {
					factor = 1.6
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_naturally_spiritualist }
					}
				}
				modifier = {
					factor = 0
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_naturally_materialist }
					}
				}
				modifier = {
					factor = 0
					capital_scope = {
						has_observation_outpost = yes
						observation_outpost = {
							has_scion_mission = yes
							owner = { is_spiritualist = yes }
						}
					}
				}
				modifier = {
					factor = 0
					ruler = {
						has_trait = leader_trait_ruler_chosen
					}
				}
			}
			9 = {
				primitive_ethic_shift_effect = { ethic = spiritualist notification_event = prim_orig.148 }
				modifier = {
					factor = 0.5
					OR = {
						has_country_flag = machine_age
						has_country_flag = atomic_age
						has_country_flag = early_space_age
					}
				}
				modifier = {
					factor = 1.25
					any_owned_species = {
						is_same_species = root
						has_trait = trait_traditional
					}
				}
				modifier = {
					factor = 0.75
					any_owned_species = {
						is_same_species = root
						OR = {
							has_trait = trait_natural_physicists
							has_trait = trait_natural_engineers
							has_trait = trait_natural_sociologists
						}
					}
				}
				modifier = {
					factor = 1.6
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_naturally_materialist }
					}
				}
				modifier = {
					factor = 0
					any_owned_species = {
						is_same_species = root
						has_dtraits_trait = { trait = trait_naturally_spiritualist }
					}
				}
				modifier = {
					factor = 0
					capital_scope = {
						has_observation_outpost = yes
						observation_outpost = {
							has_scion_mission = yes
							owner = { is_materialist = yes }
						}
					}
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.141
	title = evt_primitive_shift_to_authoritarian
	desc = evt_primitive_shift_to_authoritarian_desc
	picture = GFX_evt_medieval_alien_civilization
	location = from
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.142
	title = evt_primitive_shift_to_egalitarian
	desc = evt_primitive_shift_to_egalitarian_desc
	
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.143
	title = evt_primitive_shift_to_xenophobe
	desc = evt_primitive_shift_to_xenophobe_desc
	
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.144
	title = evt_primitive_shift_to_xenophile
	desc = evt_primitive_shift_to_xenophile_desc
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.145
	title = evt_primitive_shift_to_militarist
	desc = evt_primitive_shift_to_militarist_desc
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.146
	title = evt_primitive_shift_to_pacifist
	desc = evt_primitive_shift_to_pacifist_desc
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.147
	title = evt_primitive_shift_to_spiritualist
	desc = evt_primitive_shift_to_spiritualist_desc
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.148
	title = evt_primitive_shift_to_materialist
	desc = evt_primitive_shift_to_materialist_desc
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}

# Postapocalyptic
country_event = {
	id = prim_orig.150
	
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = recently_advanced
	}
	
	immediate = {
		random_list = {
			1 = {
				primitive_ethic_shift_effect = { ethic = spiritualist notification_event = prim_orig.151 }
			}
			1 = {
				primitive_ethic_shift_effect = { ethic = materialist notification_event = prim_orig.152 }
			}
			3 = {
				primitive_ethic_shift_effect = { ethic = pacifist notification_event = prim_orig.153 }
			}
		}
		capital_scope = {
			IF = {
				limit = { has_observation_outpost = yes }
				observation_outpost_owner = {
					country_event = { id = prim_orig.141 }
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.151
	title = evt_primitive_shift_to_spiritualist_postapoc
	desc = evt_primitive_shift_to_spiritualist_postapoc_desc
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.152
	title = evt_primitive_shift_to_materialist
	desc = evt_primitive_shift_to_materialist_postapoc_desc
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified
country_event = {
	id = prim_orig.153
	title = evt_primitive_shift_to_pacifist
	desc = evt_primitive_shift_to_pacifist_postapoc_desc
	picture = GFX_evt_medieval_alien_civilization
	location = from.capital_scope
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}



#########################
#	Primitive Earth		#
#########################

country_event = {
	id = prim_orig.200
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		is_country_type = primitive
	}
	immediate = {
		remove_country_flag = stone_age_humans
		remove_country_flag = bronze_age_humans
		remove_country_flag = iron_age_humans
		remove_country_flag = late_medieval_age_humans
		remove_country_flag = renaissance_age_humans
		remove_country_flag = steam_age_humans
		remove_country_flag = industrial_age_humans
		remove_country_flag = machine_age_humans
		remove_country_flag = atomic_age_humans
		remove_country_flag = early_space_age_humans
		remove_country_flag = postapocalyptic_humans
		switch = {
			trigger = has_country_flag
			stone_age = { set_country_flag = stone_age_humans }
			bronze_age = { set_country_flag = bronze_age_humans }
			iron_age = { set_country_flag = iron_age_humans }
			late_medieval_age = { set_country_flag = late_medieval_age_humans }
			renaissance_age = { set_country_flag = renaissance_age_humans }
			steam_age = { set_country_flag = steam_age_humans }
			industrial_age = { set_country_flag = industrial_age_humans }
			machine_age = { set_country_flag = machine_age_humans }
			atomic_age = { set_country_flag = atomic_age_humans }
			early_space_age = { set_country_flag = early_space_age_humans }
			vbp_tomb_primitives = { set_country_flag = postapocalyptic_humans }
		}
		country_event = {
			id = prim_orig.200
			days = 1800 # 5 years
		}
	}
}

country_event = {
	id = prim_orig.210
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		OR = {
			has_country_flag = early_space_age_humans
			has_country_flag = atomic_age_humans
		}
		OR = {
			is_egalitarian = yes
			is_xenophile = yes
		}
		OR = {
			has_authority = auth_democratic
			has_authority = auth_oligarchic
		}
	}
	immediate = {
		change_country_flag = {
			icon = {
				category = "human"
				file = "flag_human_9.dds"
			}
			background= {
				category = "backgrounds"
				file = "circle.dds"
			}
			colors={
				"dark_blue"
				"green"
				"null"
				"null"
			}
		}
		set_name = "humans1"
		set_country_flag = human_1
	}
}

# country_event = {
# 	id = prim_orig.220
# 	is_triggered_only = yes
# 	hide_window = yes
# 	trigger = {
# 		OR = {
# 			has_country_flag = bronze_age_humans
# 			has_country_flag = iron_age_humans
# 			has_country_flag = late_medieval_age_humans
# 			has_country_flag = renaissance_age_humans
# 			has_country_flag = steam_age_humans
# 			has_country_flag = industrial_age_humans
# 			has_country_flag = machine_age_humans
# 			has_country_flag = atomic_age_humans	
# 		}
# 	}
# 	immediate = {
# 		every_owned_leader = {
# 			give_earth_leader_name = yes
# 		}
# 		every_pool_leader = {
# 			give_earth_leader_name = yes
# 		}
# 	}
# }

###########################
#
#   primitive lost colony
#
###########################

country_event = {
	id = prim_orig.400
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_gestalt = no
		NOR = {
			has_origin = origin_void_dwellers
			has_origin = origin_lost_colony
		}
	}
	
	immediate = {
		save_event_target_as = lost_colony_parent
		species = { save_event_target_as = lost_colony_species }
		random_list = {
			95 = { }
			5 = {
				create_newly_lost_colony_country = yes
				last_created_country = { save_event_target_as = lost_colony_country }
				random_system = {
					limit = {
						OR = {
							has_owner = no
							space_owner = {
								is_country_type = default
								OR = {
									root = { has_country_flag = entered_space_naturally }
									NOT = { has_communications = root }
								}
							}
						}
						NOT = { has_star_flag = lcluster }
						any_system_planet = { is_colonizable = yes }
					}
					star = { save_event_target_as = lost_colony_star }
					create_fleet = {
						name = random
						effect = {
							set_owner = last_created_country
							IF = {
								limit = {
									root = { has_origin = origin_lithoid }
								}
								create_ship = {
									name = random
									random_existing_design = lithoid_colonizer
									colonizer_species = event_target:lost_colony_species
								}
							}
							ELSE = {
								create_ship = {
									name = random
									random_existing_design = colonizer
									colonizer_species = event_target:lost_colony_species
								}
							}
							set_location = {
								target = event_target:lost_colony_star
								distance = 150
								angle = random
							}
							save_event_target_as = lost_colony_ship
							solar_system = {
								random_system_planet = {
									limit = {
										is_colonizable = yes
										IF = {
											limit = {
												prev = {
													any_system_planet = {
														is_colonizable = yes
														has_owner = no
													}	
												}
											}
											has_owner = no
										}
									}
									save_event_target_as = colony_target_planet
								}								
							}
							IF = {
								limit = { exists = solar_system.space_owner }
								solar_system = {
									IF = {
										limit = {
											NOT = {
												any_system_planet = { is_owned_by = space_owner }	
											}
										}
										save_event_target_as = system_to_offer
									}
									ELSE_IF = {
										limit = {
											owner = {
												any_owned_starbase = {
													solar_system = {
														NOT = {
															any_system_planet = { is_owned_by = space_owner }	
														}
														any_system_planet = {
															is_colonizable = yes
															has_owner = no
														}
													}
												}
											}
										}
										closest_system = {
											min_steps = 0
											max_steps = 6
											limit = {
												is_owned_by = prev.owner
												NOT = {
													any_system_planet = { is_owned_by = space_owner }	
												}
												any_system_planet = {
													is_colonizable = yes
													has_owner = no
												}

											}
											save_event_target_as = system_to_offer
										}
									}
									space_owner = {
										country_event = { id = prim_orig.401 }
									}
								}
							}
							queue_actions = {
								move_to = event_target:colony_target_planet
								orbit_planet = event_target:colony_target_planet
								effect = {
									id = "prim_orig.400.effect.1"
									event_target:colony_target_planet = {
										planet_event = {
											id = prim_orig.420
											days = 10
											scopes = {
												from = prev.owner
												fromfrom = prev
												fromfromfrom = root
											}
										}
									}
								}
							}
						}

					}
				}
			}
		}
	}
}

# space owner, primitive lost colonists arrived in system
country_event = {
	id = prim_orig.401
	title = evt_primitive_spacefarers.1
	is_triggered_only = yes
	picture = GFX_evt_ship_travel
	location = event_target:lost_colony_star
	immediate = {
		IF = {
			limit = {
				has_communications = event_target:lost_colony_parent
				NOT = {
					event_target:lost_colony_parent = { has_country_flag = entered_space_unobserved }
				}	
			}
			establish_communications_no_message = event_target:lost_colony_country
		}
	}
	desc = {
		text = evt_primitive_spacefarers_desc.1.known_primitives
		trigger = {
			event_target:lost_colony_parent = {
				NOR = {
					has_origin = origin_lithoid
					has_country_flag = entered_space_unobserved
				}
				has_communications = root
			}
		}
	}
	desc = {
		text = evt_primitive_spacefarers_desc.1.unknown_primitives
		trigger = {
			event_target:lost_colony_parent = {
				NOT = { has_origin = origin_lithoid }
				OR = {
					has_country_flag = entered_space_unobserved
					NOT = { has_communications = root }
				}
			}
		}
	}
	desc = {
		text = evt_primitive_spacefarers_desc.1.known_primitives.meteor
		trigger = {
			event_target:lost_colony_parent = {
				has_origin = origin_lithoid
				has_communications = root
				NOT = { has_country_flag = entered_space_unobserved }
			}
		}
	}
	desc = {
		text = evt_primitive_spacefarers_desc.1.unknown_primitives.meteor
		trigger = {
			event_target:lost_colony_parent = {
				has_origin = origin_lithoid
				OR = {
					has_country_flag = entered_space_unobserved
					NOT = { has_communications = root }
				}
			}
		}
	}
	option = {
		name = evt_primitive_spacefarers.destroy_meteor
		trigger = {
			event_target:lost_colony_country = { has_origin = origin_lithoid }
			event_target:colony_target_planet = { is_owned_by = root }
		}
		event_target:lost_colony_country = {
			set_country_flag = mpo_attack_spacefarers
		}
		ai_chance = {
			factor = 10
		}
	}
	option = {
		name = evt_primitive_spacefarers.observe
		trigger = {
			NAND = {
				event_target:lost_colony_country = { has_origin = origin_lithoid }
				event_target:colony_target_planet = { is_owned_by = root }	
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				OR = {
					is_homicidal = yes
					AND = {
						event_target:colony_target_planet = { has_owner = yes }
						event_target:lost_colony_country = { has_origin = origin_lithoid }
						is_xenophile = yes
					}
				}
			}
		}
	}
	option = {
		name = evt_primitive_spacefarers.attack
		trigger = {
			NAND = {
				event_target:lost_colony_country = { has_origin = origin_lithoid }
				event_target:colony_target_planet = { is_owned_by = root }	
			}
		}
		allow = {
			IF = {
				limit = {
					event_target:colony_target_planet = { has_owner = yes }
					event_target:lost_colony_country = { has_origin = origin_lithoid }
				}
				always = yes
			}
			ELSE_IF = {
				limit = { NOT = { has_communications = event_target:lost_colony_country } }
				has_policy_flag = first_contact_attack_allowed
			}
			ELSE = {
				OR = {
					has_policy_flag = interference_full
					has_policy_flag = unrestricted_wars
				}
			}
		}
		event_target:lost_colony_country = {
			set_country_flag = mpo_attack_spacefarers
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				NOR = {
					has_ai_personality_behaviour = purger
					AND = {
						event_target:colony_target_planet = { has_owner = yes }
						event_target:lost_colony_country = { has_origin = origin_lithoid }
						is_xenophobe = no
					}
				}
			}
		}
	}
	option = {
		name = evt_primitive_spacefarers.assist
		trigger = {
			has_communications = event_target:lost_colony_parent
			NOT = {
				event_target:lost_colony_parent = { has_country_flag = entered_space_unobserved }
			}
			exists = event_target:system_to_offer
			is_homicidal = no
		}
		event_target:lost_colony_country = {
			set_country_type = default
			set_subject_of = {
				who = root
				subject_type = protectorate
			}
		}
		event_target:system_to_offer = { set_owner = event_target:lost_colony_country }
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				NOT = { has_ai_personality_behaviour = uplifter }
			}
		}
	}
}

# colony ship arrives
planet_event = {
	id = prim_orig.420
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			days_passed < 3
			AND = {
				exists = fromfrom
				fromfrom.orbit = { is_same_value = root }
			}
		}
	}
	immediate = {
		IF = {
			limit = {
				has_owner = no
			}
			start_colony = {
				owner = from
				species = from.species
			}
			destroy_fleet = prev
			IF = {
				limit = {
					from = { has_origin = origin_lithoid }
				}
				planet_event = { id = origin.3010 }
			}
		}
		ELSE_IF = {
			limit = {
				has_owner = yes
				owner = { is_primitive = yes }
				NOT = {
					from = { has_origin = origin_lithoid }
				}
			}
			create_pop = {
				species = from.species
				ethos = from
			}
			IF = {
				limit = {
					OR = {
						owner = { is_xenophobe = yes }
						owner = {
							has_ethic = ethic_gestalt_consciousness
							NOT = { has_civic = civic_machine_servitor }
						}
						from = {
							OR = {
								is_militarist = yes
								AND = {
									has_origin = origin_necrophage
									is_pacifist = no
								}
							}
						}
					}
				}
				create_army = {
					name = random
					owner = from
					species = from.species
					type = postatomic_army
				}
				IF = {
					limit = {
						exists = observation_outpost_owner
					}
					observation_outpost_owner = {
						country_event = { id = prim_orig.421 }
					}
				}
			}
			ELSE_IF = {
				limit = {
					exists = observation_outpost_owner
				}
				observation_outpost_owner = {
					country_event = { id = prim_orig.422 }
				}
			}
			IF = {
				limit = {
					exists = fromfrom
					fromfrom = { is_scope_type = fleet }
				}
				destroy_fleet = fromfrom
			}
		}
		ELSE_IF = {
			limit = {
				has_owner = yes
				owner = { is_primitive = yes }
				from = { has_origin = origin_lithoid }
			}
			every_owned_pop = { kill_pop = yes }
			destroy_colony = yes
			start_colony = {
				owner = from
				species = from.species
			}
			IF = {
				limit = {
					exists = fromfrom
					fromfrom = { is_scope_type = fleet }
				}
				destroy_fleet = fromfrom
			}
			planet_event = { id = origin.3010 }
			IF = {
				limit = {
					exists = space_owner
				}
				space_owner = {
					country_event = { id = prim_orig.423 }
				}
			}
		}
		ELSE_IF = {
			limit = {
				has_owner = yes
				owner = { is_country_type = default }
				NOT = {
					from = { has_origin = origin_lithoid }
				}
			}
			planet_event = { id = prim_orig.470 }
		}
		ELSE_IF = {
			limit = {
				has_owner = yes
				owner = { is_country_type = default }
				from = { has_origin = origin_lithoid }
			}
			owner = {
				IF = {
					limit = {
						any_owned_planet = { has_designation = col_penal }
					}
					random_owned_planet = {
						limit = { has_designation = col_penal }
						save_event_target_as = penal_colony
					}
				}
			}
			IF = {
				limit = {
					owner = {
						any_planet_within_border = {
							is_colonizable = yes
							has_owner = no
						}
					}
				}
				closest_system = {
					limit = {
						is_owned_by = prev.owner
						any_system_planet = {
							is_colonizable = yes
							has_owner = no
						}
					}
					random_system_planet = {
						limit = {
							is_colonizable = yes
							has_owner = no
						}
						save_event_target_as = stranding_planet
					}
				}
			}
			planet_event = { id = prim_orig.480 }
		}
	}
}

#Player is notified - primitives at war
country_event = {
	id = prim_orig.421
	title = evt_primitive_colonists_arrive
	desc = {
		trigger = {
			fromfrom = {
				OR = {
					is_militarist = yes
					AND = {
						has_origin = origin_necrophage
						is_pacifist = no
					}
				}
			}
		}
		text = evt_primitive_colonists_arrive.war.militarist_aliens
	}
	desc = {
		trigger = {
			fromfrom = {
				NOR = {
					is_militarist = yes
					AND = {
						has_origin = origin_necrophage
						is_pacifist = no
					}
				}
			}
		}
		text = evt_primitive_colonists_arrive.war.xenophobe_natives
	}
	picture = GFX_evt_burning_city
	location = from
	
	is_triggered_only = yes
	
	option = {
		name = UNFORTUNATE
	}
}
#Player is notified - primitives coexisting
country_event = {
	id = prim_orig.422
	title = evt_primitive_colonists_arrive
	desc = evt_primitive_colonists_arrive.peace
	picture = GFX_evt_medieval_alien_civilization
	location = from
	
	is_triggered_only = yes
	
	option = {
		name = INTERESTING
	}
}
#Player is notified - primitives wiped out by lost meteor ship
country_event = {
	id = prim_orig.423
	title = evt_primitive_colonists_arrive
	desc = evt_primitive_colonists_arrive.meteor
	picture = GFX_evt_atmospheric_entry
	location = from
	
	is_triggered_only = yes
	
	option = {
		name = UNFORTUNATE
	}
}


# colonization complete
planet_event = {
	id = prim_orig.430
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		owner = { is_country_type = mpo_lost_spacefarers }
	}
	immediate = {
		setup_newly_lost_colony_planet = yes
	}
}

# primitive colonists win war against natives
planet_event = {
	id = prim_orig.440
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		from = { is_country_type = mpo_lost_spacefarers }
	}
	immediate = {
		set_owner = from
		set_capital = yes
		from = { set_country_type = primitive }
		remove_deposit = d_alien_colony
		every_owned_pop = {
			limit = { has_pop_flag = alien_colonist }
			remove_pop_flag = alien_colonist
			remove_modifier = culture_shock_early_space_age
		}
		switch = {
			trigger = num_pops
			20 > {
				from = {
					set_primitive_age_effect = { primitive_age = early_space_age }
				}
			}
			8 > {
				setup_newly_lost_colony_planet = yes
				from = {
					upgrade_primitive_lost_colony = yes
				}
			}
			default = {
				setup_newly_lost_colony_planet = yes
			}
		}
	}
}

# primitive colonists lose war against xenophobe natives
planet_event = {
	id = prim_orig.441
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		from = { is_country_type = mpo_lost_spacefarers }
		owner = {
			is_primitive = yes
			is_xenophobe = yes
		}
	}
	immediate = {
		every_owned_pop = {
			limit = { is_same_species = from }
			kill_pop = yes
		}
	}
}

# colony grows
country_event = {
	id = prim_orig.450
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = mpo_stranded_colonists_1
	}
	immediate = {
		upgrade_primitive_lost_colony = yes
	}
}

# primitive lost colony, at game start
country_event = {
	id = prim_orig.460
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_country_type = default
		is_gestalt = no
		NOR = {
			has_origin = origin_void_dwellers
			has_origin = origin_lost_colony
		}
	}
	
	immediate = {
		save_event_target_as = lost_colony_parent
		species = { save_event_target_as = lost_colony_species }
		random_list = {
			95 = { }
			5 = {
				create_newly_lost_colony_country = yes
				last_created_country = {
					save_event_target_as = lost_colony_country
				}
				random_system = {
					limit = {
						has_owner = no
						any_system_planet = { is_colonizable = yes }
					}
					random_system_planet = {
						limit = {
							is_colonizable = yes
							OR = {
								has_owner = no
								event_target:lost_colony_country = {
									NAND = {
										has_origin = origin_lithoid
										is_xenophile = yes
									}
								}
							}
						}
						create_colony = {
							owner = event_target:lost_colony_country
							species = event_target:lost_colony_country
						}
						set_capital = yes
						planet_event = {
							id = prim_orig.430
						}
					}
				}
				IF = {
					limit = { is_ai = yes }
					random_list = {
						50 = { }
						50 = {
							event_target:lost_colony_country = {
								country_event = {
									id = prim_orig.450
									days = 2	
								}	
							}
						}
					}
				}
			}
		}
	}
}

# primitives land on owned planet
planet_event = {
	id = prim_orig.470
	title = evt_primitive_colonists_arrive.playable
	desc = evt_primitive_colonists_arrive.playable_desc
	picture = GFX_evt_atmospheric_entry
	is_triggered_only = yes
	immediate = {
		create_pop = {
			species = fromfromfrom
			ethos = fromfrom
		}
		last_created_pop = {
			set_pop_flag = alien_colonist
			save_event_target_as = colonist_pop
		}
		add_deposit = d_alien_colony
	}
	option = {
		name = evt_primitive_colonists_arrive.start_establishing_communications
		enable_special_project = {
			name = ESTABLISH_COMMS_PRIMITIVE_COLONISTS
			owner = owner
		}
		hidden_effect = {
			destroy_fleet = fromfromfrom
		}
		trigger = {
			event_target:colonist_pop = {
				is_enslaved = no
				is_being_purged = no
			}
			owner = {
				NAND = {
					exists = fromfromfromfrom
					has_communications = fromfromfromfrom
				}
				NOT = {
					has_valid_civic = civic_machine_assimilator
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0.1
				owner = {
					is_militarist = yes
				}
			}
			modifier = {
				factor = 0.25
				owner = {
					is_xenophobe = yes
				}
			}
		}
	}
	option = {
		name = evt_primitive_colonists_arrive.establish_communications
		hidden_effect = {
			planet_event = {
				id = prim_orig.471
			}			
			destroy_fleet = fromfromfrom
		}
		trigger = {
			event_target:colonist_pop = {
				is_enslaved = no
				is_being_purged = no
			}
			owner = {
				exists = fromfromfromfrom
				has_communications = fromfromfromfrom
				NOT = {
					has_valid_civic = civic_machine_assimilator
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0.1
				owner = {
					is_militarist = yes
				}
			}
			modifier = {
				factor = 0.25
				owner = {
					is_xenophobe = yes
				}
			}
		}
	}
	option = {
		name = evt_primitive_colonists_arrive.subdue
		remove_deposit = d_alien_colony
		create_army = {
			owner = fromfrom
			type = postatomic_army
		}
		event_target:colonist_pop = {
			add_modifier = {
				modifier = culture_shock_early_space_age
				years = 10
			}
			add_modifier = {
				modifier = pop_recently_conquered
				years = 10
			}
		}
		hidden_effect = {
			destroy_fleet = fromfromfrom
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0.05
				owner = {
					is_pacifist = yes
				}
			}
			modifier = {
				factor = 0.2
				owner = {
					is_xenophile = yes
				}
			}
			modifier = {
				factor = 2
				event_target:colonist_pop = { has_ethic = ethic_materialist }
				owner = { is_spiritualist = yes }
			}
		}
	}
}

# communications established
planet_event = {
	id = prim_orig.471
	title = evt_alien_colonists_communications
	desc = evt_alien_colonists_communications_desc
	picture = GFX_evt_atmospheric_entry
	is_triggered_only = yes
	immediate = {
		set_planet_flag = communications_with_primitives
	}
	option = {
		name = EXCELLENT
	}
}

# primitives land on owned planet
planet_event = {
	id = prim_orig.480
	title = evt_primitive_colonists_arrive.playable.meteor
	desc = evt_primitive_colonists_arrive.playable.meteor_desc
	picture = GFX_evt_asteroid_approaching_planet
	is_triggered_only = yes
	immediate = {
		IF = {
			limit = { has_building = building_planetary_shield_generator }
			add_planet_devastation = 25
			while = {
				count = 2
				limit = { num_pops > 1 }
				random_owned_pop = { kill_pop = yes }
			}
		}
		ELSE = {
			add_planet_devastation = 50
		}
		while = {
			count = 3
			create_pop = {
				species = fromfromfrom
				ethos = fromfrom
			}
			last_created_pop = {
				set_pop_flag = lithoid_colonist
			}
			while = {
				count = 4
				limit = { num_pops > 1 }
				random_owned_pop = { kill_pop = yes }
			}
		}
	}
	option = {
		name = evt_primitive_colonists_arrive.playable.meteor.kill
		trigger = {
			owner = {
				NOT = { has_valid_civic = civic_machine_assimilator }
			}
		}
		every_owned_pop = {
			limit = { has_pop_flag = lithoid_colonist }
			kill_pop = yes
		}
		hidden_effect = {
			destroy_fleet = fromfromfrom
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 50
				owner = {
					has_ai_personality_behaviour = purger
				}
			}
		}
	}
	option = {
		name = evt_primitive_colonists_arrive.playable.meteor.penal
		trigger = {
			owner = { has_technology = tech_penal_colonies }
		}
		allow = {
			owner = {
				any_owned_planet = { has_designation = col_penal }
				has_resource = {
					type = energy
					amount >= 150
				}
			}
		}
		owner = {
			add_resource = {
				energy = -150
			}
			hidden_effect = {
				random_owned_planet = {
					limit = { has_designation = col_penal }
					save_event_target_as = penal_colony
				}					
			}
		}
		every_owned_pop = {
			limit = { has_pop_flag = lithoid_colonist }
			resettle_pop = {
				pop = THIS
				planet = event_target:penal_colony
			}
			add_modifier = {
				modifier = culture_shock_early_space_age
				years = 10
			}
		}
		hidden_effect = {
			destroy_fleet = fromfromfrom
		}
		ai_chance = {
			factor = 500
		}
	}
	option = {
		name = evt_primitive_colonists_arrive.playable.meteor.strand
		trigger = {
			exists = event_target:stranding_planet
		}
		allow = {
			owner = {
				has_resource = {
					type = energy
					amount >= 150
				}
			}
		}
		owner = {
			add_resource = {
				energy = -150
			}
		}
		event_target:stranding_planet = {
			set_owner = fromfrom
			set_capital = yes
			setup_newly_lost_colony_planet = yes
			every_owned_pop = {
				save_event_target_as = redundant_pop
			}
		}
		every_owned_pop = {
			limit = { has_pop_flag = lithoid_colonist }
			resettle_pop = {
				pop = THIS
				planet = event_target:stranding_planet
			}
		}
		hidden_effect = {
			event_target:redundant_pop = { kill_pop = yes }
			destroy_fleet = fromfromfrom
		}

		ai_chance = {
			factor = 5
		}
	}
	option = {
		name = evt_primitive_colonists_arrive.playable.meteor.enslave
		fromfromfrom.species = {
			set_citizenship_type = {
				type = citizenship_slavery
				country = root.owner
			}
		}
		hidden_effect = {
			destroy_fleet = fromfrom
		}
		trigger = {
			owner = { allows_slavery = yes }
		}
		ai_chance = {
			factor = 500
		}
	}
	option = {
		name = evt_primitive_colonists_arrive.playable.meteor.pamper
		fromfromfrom.species = {
			set_citizenship_type = {
				type = citizenship_organic_trophy
				country = root.owner
			}
		}
		hidden_effect = {
			destroy_fleet = fromfrom
		}
		trigger = {
			owner = { has_valid_civic = civic_machine_servitor }
		}
	}
	option = {
		name = evt_primitive_colonists_arrive.playable.meteor.assimilate
		fromfromfrom.species = {
			set_citizenship_type = {
				type = citizenship_assimilation
				country = root.owner
			}
		}
		hidden_effect = {
			destroy_fleet = fromfrom
		}
		trigger = {
			owner = {
				OR = {
					has_valid_civic = civic_machine_assimilator
					AND = {
						has_authority = auth_hive_mind
						NOT = { has_civic = civic_hive_devouring_swarm }
					}
				}
			}
		}
	}
}

# Colonists receive system
country_event = {
	id = prim_orig.490
	title = evt_lost_colonists_given_system
	desc = evt_lost_colonists_given_system_desc
	picture = GFX_evt_metropolis
	show_sound = event_laboratory_sound
	location = FROMFROM

	is_triggered_only = yes

	immediate = {
		FROMFROM = {
			owner = { save_event_target_as = primitive_country }
			observation_outpost_owner = {
				# Xenoist Faction Enlightenment Demand
				set_timed_country_flag = {
					flag = recent_enlightenment_timed
					days = 7200 # 20 years
				}
				add_intel = {
					who = event_target:primitive_country
					amount = 100
				}
			}
			observation_outpost = {
				dismantle = yes
			}
			solar_system = {
				if = {
					limit = {
						starbase = { owner = { is_same_value = root } }
					}
					starbase = {
						set_owner = event_target:primitive_country
						if = {
							limit = { has_starbase_size = starbase_outpost }
							set_starbase_size = starbase_starport
						}
					}
				}
				every_system_planet = {
					limit = {
						exists = owner
						owner = { is_same_value = root }
					}
					set_owner = event_target:primitive_country
				}
			}
			event_target:primitive_country = {
				country_event = { id = prim_orig.491 }
				add_opinion_modifier = { who = root modifier = opinion_enlightened_us }
				if = {
					limit = {
						root = { is_country_type = default }
					}
					if = {
						limit = {
							root = { has_valid_civic = "civic_inwards_perfection" }
						}
						set_subject_of = {
							who = root
							subject_type = tributary
						}
					}
					else = {
						set_subject_of = {
							who = root
							subject_type = protectorate
						}
					}
				}
				if = {
					limit = {
						root = { is_country_type = awakened_fallen_empire }
					}
					if = {
						limit = {
							root = {
								has_ethic = ethic_fanatic_xenophobe
							}
						}
						set_subject_of = {
							who = root
							subject_type = thrall
						}
					}
					if = {
						limit = {
							root = {
								has_ethic = ethic_fanatic_xenophile
							}
						}
						set_subject_of = {
							who = root
							subject_type = signatory
						}
					}
					if = {
						limit = {
							root = {
								has_ethic = ethic_fanatic_spiritualist
							}
						}
						set_subject_of = {
							who = root
							subject_type = dominion
						}
					}
					if = {
						limit = {
							root = {
								has_ethic = ethic_fanatic_materialist
							}
						}
						set_subject_of = {
							who = root
							subject_type = satellite
						}
					}
				}
			}
		}
	}

	option = {
		name = "observation.2000.a"
	}
}
country_event = {
	id = prim_orig.491

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		from = { save_event_target_as = observation_outpost_owner }
		remove_country_flag = mpo_stranded_colonists_1
		remove_country_flag = mpo_stranded_colonists_2
		set_country_flag = primitives_can_into_space
		set_country_type = default
		switch = {
			trigger = is_species_class
			MAM = { set_graphical_culture = mammalian_01 }
			REP = { set_graphical_culture = reptilian_01 }
			AVI = { set_graphical_culture = avian_01 }
			ART = { set_graphical_culture = arthropoid_01 }
			MOL = { set_graphical_culture = molluscoid_01 }
			FUN = { set_graphical_culture = fungoid_01 }
			PLANT = { set_graphical_culture = plantoid_01 }
			HUM = { set_graphical_culture = humanoid_01 }
			LITHOID = { set_graphical_culture = lithoid_01 }
			NECROID = { set_graphical_culture = necroid_01 }
			AQUATIC = { set_graphical_culture = aquatic_01 }
		}

		add_resource = {
			energy = 500
			minerals = 1000 # enough for a spaceport and then some
			influence = 300
		}

		if = {
			limit = {
				capital_scope = { is_planet_class = pc_ringworld_habitable } 
			}
			# hope you find some mineral deposits out in the void. Here's an extra subsidy to tide you over until the resource shortages cripple you.
			add_resource = {
				energy = 1000
				alloys = 1000
				volatile_motes = 500
				exotic_gases = 500
				rare_crystals = 500
			}
		}

		capital_scope = {

			IF = {
				limit = { is_planet_class = pc_ringworld_habitable }
				change_pc = pc_shattered_ring_habitable
			}
			IF = {
				limit = {
					has_building = building_primitive_colony_capital
				}
				remove_building = building_primitive_colony_shelter
				add_building = building_colony_shelter
			}
			ELSE = {
				remove_building = building_primitive_colony_capital
				remove_building = building_urban_dwellings
				remove_building = building_primitive_factory
				remove_building = building_primitive_farm
				remove_building = building_primitive_mine
				remove_building = building_primitive_power_plant

				add_building = building_capital
				add_district = district_city
				add_district = district_industrial
				add_district = district_mining
				add_district = district_generator

				IF = {
					limit = {
						any_owned_species = {
							is_archetype = BIOLOGICAL
						}
					}
					add_district = district_farming
					add_district = district_farming
				}
				ELSE = {
					add_district = district_mining
					add_district = district_mining
				}
			}
			
			IF = {
				limit = {
					any_owned_species = { is_species_class = ROBOT }
				}
				add_building = building_robot_assembly_plant
			}
			IF = {
				limit = {
					owner = {
						has_origin = origin_necrophage
						is_homicidal = no
					}
				}
				add_building = building_necrophage_elevation_chamber
			}

			remove_all_armies = yes
		}

		IF = {
			limit = { has_country_flag = mpo_primitive_contact_sender }
			remove_country_flag = mpo_primitive_contact_sender
			random_list = {
				# common ground
				50 = {
					every_country = {
						limit = {
							has_country_flag = mpo_primitive_contact@prev
						}
						remove_country_flag = mpo_primitive_contact@prev
						add_opinion_modifier = {
							who = prev
							modifier = opinion_common_ground
						}
						IF = {
							limit = {
								OR = {
									is_country_type = primitive
									is_country_type = vbp_hive
									is_country_type = vbp_machine
								}	
							}
							set_timed_country_flag = { flag = mpo_common_ground_advance days = 2 }
							country_event = { id = prim_orig.5 }
						}
						ELSE = {
							join_alliance = { who = root override_requirements = yes }
							IF = {
								limit = {
									NOT = { has_country_flag = mpo_common_ground_advance }
								}
								set_federation_leader = this
								add_tradition = tr_diplomacy_adopt
								add_tradition = tr_diplomacy_the_federation
							}
						}
					}
					modifier = {
						factor = 0
						has_country_flag = mpo_hegemon_advance
					}
				}
				# hegemon
				50 = {
					IF = {
						limit = { has_origin = origin_common_ground }
						set_origin = origin_hegemon
					}
					every_country = {
						limit = {
							has_country_flag = mpo_primitive_contact@prev
						}
						remove_country_flag = mpo_primitive_contact@prev
						IF = {
							limit = {
								OR = {
									is_country_type = primitive
									is_country_type = vbp_hive
									is_country_type = vbp_machine
								}	
							}
							set_timed_country_flag = { flag = mpo_hegemon_advance days = 2 }
							country_event = { id = prim_orig.5 }
						}
						ELSE = {
							join_alliance = { who = root override_requirements = yes }
							IF = {
								limit = {
									NOT = { has_country_flag = mpo_hegemon_advance }
								}
								set_federation_leader = this
								add_tradition = tr_diplomacy_adopt
								add_tradition = tr_diplomacy_the_federation
								federation = {
									set_federation_type = hegemony_federation
									set_name = random
									set_federation_law = succession_term_years_20
								}
							}
						}
					}
					modifier = {
						factor = 0
						OR = {
							has_country_flag = mpo_common_ground_advance
							AND = {
								is_egalitarian = yes
								NOT = { has_country_flag = mpo_hegemon_advance 	}
							}
						}
					}
				}
			}
		}

		random_owned_ship = {
			limit = { is_ship_size = primitive_space_station }
			fleet = { destroy_fleet = THIS }
		}		

		fire_on_action = {
			on_action = on_primitives_enter_space
			scopes = {
				from = event_target:observation_outpost_owner
			}
		}
	}
}


#Clones get free will
country_event = {
	id = prim_orig.500
	
	hide_window = yes
	
	trigger = {
		is_country_type = abandoned_clone_army
	}
	
	mean_time_to_happen = {
		years = 900
	}
	
	immediate = {
		set_country_type = primitive
		set_country_flag = atomic_age
		set_primitive_age = atomic_age
		set_name = random
		set_variable = {
			which = spare_ethics_points
			value = 3
		}
		while = {
			limit = {
				check_variable = {
					which = spare_ethics_points
					value > 0
				}	
			}
			random_list = {
				150 = {
					country_add_ethic = ethic_fanatic_authoritarian
					subtract_variable = {
						which = spare_ethics_points
						value = 2
					}
					modifier = {
						factor = 0
						OR = {
							check_variable = {
								which = spare_ethics_points
								value < 2
							}
							is_authoritarian = yes
							is_egalitarian = yes
						}
					}
				}
				100 = {
					country_add_ethic = ethic_authoritarian
					subtract_variable = {
						which = spare_ethics_points
						value = 1
					}
					modifier = {
						factor = 0
						OR = {
							is_authoritarian = yes
							is_egalitarian = yes
						}
					}
				}
				150 = {
					change_government = {
						authority = auth_democratic
						civics = random
						cooldown = no
					}
					country_add_ethic = ethic_fanatic_egalitarian
					subtract_variable = {
						which = spare_ethics_points
						value = 2
					}
					modifier = {
						factor = 0
						OR = {
							check_variable = {
								which = spare_ethics_points
								value < 2
							}
							is_authoritarian = yes
							is_egalitarian = yes
						}
					}
				}
				100 = {
					change_government = {
						authority = auth_democratic
						civics = random
						cooldown = no
					}
					country_add_ethic = ethic_egalitarian
					subtract_variable = {
						which = spare_ethics_points
						value = 1
					}
					modifier = {
						factor = 0
						OR = {
							is_authoritarian = yes
							is_egalitarian = yes
						}
					}
				}

				150 = {
					country_add_ethic = ethic_fanatic_xenophobe
					subtract_variable = {
						which = spare_ethics_points
						value = 2
					}
					modifier = {
						factor = 0
						OR = {
							check_variable = {
								which = spare_ethics_points
								value < 2
							}
							is_xenophobe = yes
							is_xenophile = yes
						}
					}
				}
				100 = {
					country_add_ethic = ethic_xenophobe
					subtract_variable = {
						which = spare_ethics_points
						value = 1
					}
					modifier = {
						factor = 0
						OR = {
							is_xenophobe = yes
							is_xenophile = yes
						}
					}
				}
				100 = {
					country_add_ethic = ethic_fanatic_xenophile
					subtract_variable = {
						which = spare_ethics_points
						value = 2
					}
					modifier = {
						factor = 0
						OR = {
							check_variable = {
								which = spare_ethics_points
								value < 2
							}
							is_xenophobe = yes
							is_xenophile = yes
						}
					}
				}
				66 = {
					country_add_ethic = ethic_xenophile
					subtract_variable = {
						which = spare_ethics_points
						value = 1
					}
					modifier = {
						factor = 0
						OR = {
							is_xenophobe = yes
							is_xenophile = yes
						}
					}
				}

				250 = {
					country_add_ethic = ethic_fanatic_militarist
					subtract_variable = {
						which = spare_ethics_points
						value = 2
					}
					modifier = {
						factor = 0
						OR = {
							check_variable = {
								which = spare_ethics_points
								value < 2
							}
							is_militarist = yes
							is_pacifist = yes
						}
					}
				}
				150 = {
					country_add_ethic = ethic_militarist
					subtract_variable = {
						which = spare_ethics_points
						value = 1
					}
					modifier = {
						factor = 0
						OR = {
							is_militarist = yes
							is_pacifist = yes
						}
					}
				}
				33 = {
					country_add_ethic = ethic_fanatic_pacifist
					subtract_variable = {
						which = spare_ethics_points
						value = 2
					}
					modifier = {
						factor = 0
						OR = {
							check_variable = {
								which = spare_ethics_points
								value < 2
							}
							is_militarist = yes
							is_pacifist = yes
						}
					}
				}
				66 = {
					country_add_ethic = ethic_pacifist
					subtract_variable = {
						which = spare_ethics_points
						value = 1
					}
					modifier = {
						factor = 0
						OR = {
							is_militarist = yes
							is_pacifist = yes
						}
					}
				}


				150 = {
					country_add_ethic = ethic_fanatic_spiritualist
					subtract_variable = {
						which = spare_ethics_points
						value = 2
					}
					modifier = {
						factor = 0
						OR = {
							check_variable = {
								which = spare_ethics_points
								value < 2
							}
							is_spiritualist = yes
							is_materialist = yes
						}
					}
				}
				100 = {
					country_add_ethic = ethic_spiritualist
					subtract_variable = {
						which = spare_ethics_points
						value = 1
					}
					modifier = {
						factor = 0
						OR = {
							is_spiritualist = yes
							is_materialist = yes
						}
					}
				}
				150 = {
					country_add_ethic = ethic_fanatic_materialist
					subtract_variable = {
						which = spare_ethics_points
						value = 2
					}
					modifier = {
						factor = 0
						OR = {
							check_variable = {
								which = spare_ethics_points
								value < 2
							}
							is_spiritualist = yes
							is_materialist = yes
						}
					}
				}
				100 = {
					country_add_ethic = ethic_materialist
					subtract_variable = {
						which = spare_ethics_points
						value = 1
					}
					modifier = {
						factor = 0
						OR = {
							is_spiritualist = yes
							is_materialist = yes
						}
					}
				}
			}
		}
		change_government = {
			authority = random
			civics = random
			cooldown = no
		}
		IF = {
			limit = { has_global_flag = dtraits_randomization_flag }
			weight_ethos_by_traits = yes
			weight_authority_by_traits = yes
			post_ethos_weighting_cleanup = yes
			adjust_traits_for_ethics = yes
			remove_global_flag = need_to_do_something_besides_scripted_effects
		}
		capital_scope = {
			IF = {
				limit = { exists = observation_outpost }
				observation_outpost_owner = {
					country_event = { id = prim_orig.501 }
				}
			}
		}
	}
}
#Player is notified
country_event = {
	id = prim_orig.501
	title = evt_clone_army_free
	picture = GFX_evt_clones
	location = from.capital_scope
	show_sound = event_default
	is_triggered_only = yes
	desc = evt_clone_army_free_desc
		
	option = {
		name = INTERESTING
	}
}

# Clones appropriated
country_event = {
	id = prim_orig.510
	title = evt_clones_appropriated
	desc = evt_clones_appropriated_desc
	picture = GFX_evt_metropolis
	show_sound = event_cityscape ### Celebration sound?
	location = FROM

	is_triggered_only = yes

	immediate = {
		FROMFROMFROM = {
			owner = {
				save_event_target_as = primitive_civ
				if = {
					limit = {
						is_species_class = REP
						root = { is_species_class = HUM }
					}
					root = { set_country_flag = reverse_v }
				}
			}
			random_owned_pop = { save_event_target_as = prim_species }
			observation_outpost = { dismantle = yes }
			set_owner = ROOT
			remove_all_armies = yes
			create_army = {
				name = random
				owner = ROOT
				species = owner_main_species
				type = "defense_army"
			}
			remove_building = building_primitive_farm
			remove_building = building_primitive_mine
			remove_building = building_primitive_factory
			remove_building = building_primitive_clone_capital
			remove_building = building_urban_dwellings
			remove_building = building_urban_dwellings

			add_building = building_capital

			if = {
				limit = { NOT = { is_planet_class = pc_ringworld_habitable } }

				while = {
					count = 3
					add_district = {
						district_type = district_city
						ignore_cap = yes
					}
				}
				while = {
					count = 2
					add_district = {
						district_type = district_industrial
						ignore_cap = yes
					}
				}
				if = {
					limit = {
						event_target:primitive_civ = {
							is_lithoid_empire = no
						}
					}
					while = {
						count = 3
						add_district = {
							district_type = district_farming
							ignore_cap = yes
						}
					}
				}
				else = {
					while = {
						count = 3
						add_district = {
							district_type = district_mining
							ignore_cap = yes
						}
					}
				}
				while = {
					count = 3
					add_district = {
						district_type = district_mining
						ignore_cap = yes
					}
				}
				while = {
					count = 3
					add_district = {
						district_type = district_generator
						ignore_cap = yes
					}
				}
				if = {
					limit = {
						owner = { is_phototrophic = yes }
					}
					while = {
						count = 2
						add_district = {
							district_type = district_generator
							ignore_cap = yes
						}
					}
				}
				add_building = building_research_lab_1
				add_building = building_commercial_forum
			}

			event_target:primitive_civ = { destroy_country = yes }
		}
	}

	option = {
		name = "observation.3009.a"
	}
}
